openapi: 3.0.0
info:
  title: Linkplay/WiiM/Arylic HTTP API
  description: |-
    HTTP API for Linkplay/WiiM devices.


    You can send 'HTTPs Get' request to the device, most of the response is in
    the JSON format.


    Request format is https://x.x.x.x/httpapi.asp?command=********

    x.x.x.x is the IP address of the device (Below, we assume the IP of the
    device is 10.10.10.254) ******* is the actual command.


    Commands can contain both integers and strings, denoted as '%d' for integers
    and '%s' for strings, respectively.


    This Swagger doc uses a reverse proxy to access the device. See the
    description for the actual command.
  version: 1.2.0
  contact: {}

servers:
  - url: "http://localhost:3000/proxy"
    description: Reverse proxy to access the device. See the README for more information.

tags:
  - name: Generic
    description: Generic command for testing
  - name: Device information
    description: Get the device information
  - name: Network
    description: Get the network status
  - name: Playback control
    description: Get and set playback controls
  - name: EQ
    description: Get and set equalizer settings
  - name: Device control
    description: Control the device
  - name: Alarm clock
    description: Get and set alarm clock
  - name: Source Input Switch
    description: Switch between inputs
  - name: Presets
    description: |-
      Manage presets

      The WiiM Home App allows users to configure 12 presets for quick access to
      preferred radio stations, playlists, mixes, albums, or artists. Each preset is accessible through its assigned number.
  - name: Track Metadata
    description: Get Current Track Metadata
  - name: Audio Output Control
    description: Get and set audio output mode
  - name: Bluetooth
    description: Get and set Bluetooth settings

paths:
  /{command}:
    get:
      summary: Generic command
      description: |-
        Generic command to the device. All calls will follow the format /httpapi.asp?command={command}.


        The actual command is passed as a path parameter. With this, you can test out any command that is not explicitly defined in this API.

        The response could be a simple 'OK' or an object with data. The actual response will depend on the command sent. If you get an 'unknown command' response, the command is not supported by the device.


        Examples:
        -  'getStatusEx' will do an /httpapi.asp?command=getStatusEx
        -  'setPlayerCmd:pause' will do an /httpapi.asp?command=setPlayerCmd:pause
        -  'setPlayerCmd:resume' will do an /httpapi.asp?command=setPlayerCmd:resume
        
      externalDocs:
        description: HTTP API for WiiM PRODUCTS Version 1.2
        url: "https://www.wiimhome.com/pdf/HTTP%20API%20for%20WiiM%20Products.pdf"
      parameters:
        - name: command
          description: The actual command to send to the device. Note that the command is case-sensitive.
          in: path
          required: true
          schema:
            type: string
          example: getStatusEx
      responses:
        "200":
          description: Successful response
          content:
            text/html:
              schema:
                type: string
              examples:
                OK:
                  summary: Response OK
                  value: OK
                object:
                  summary: Response Object
                  value: '{"foo":"bar"}'
                unknown-command:
                  summary: Response 'Unknown command'
                  value: "unknown command"
      tags:
        - Generic
      operationId: genericCommand
  /getStatusEx:
    get:
      tags:
        - Device information
      summary: Get device information
      description: |-
        Makes a call to https://10.10.10.254/httpapi.asp?command=getStatusEx


        Retrieves detailed informations about a connected device.

        The documented output may or may not be complete or differ from what the
        device actually reports.
      externalDocs:
        description: HTTP API for WiiM PRODUCTS Version 1.2
        url: "https://www.wiimhome.com/pdf/HTTP%20API%20for%20WiiM%20Products.pdf"
      operationId: getStatusEx
      responses:
        "200":
          description: Successful response
          content:
            text/html:
              schema:
                $ref: "#/components/schemas/DeviceStatus"
      parameters: []
  /getStaticIpInfo:
    get:
      tags:
        - Network
      summary: Get the static IP information
      description: |-
        Makes a call to https://10.10.10.254/httpapi.asp?command=getStaticIpInfo

        If the WiiM device is configured to use DHCP, the above string values will be empty (see the ethernet related keys).
      externalDocs:
        description: WiiM Extended HTTP API by DanBrezeanu
        url: "https://github.com/DanBrezeanu/wiim-extended-http-api"
      operationId: getStaticIpInfo
      responses:
        "200":
          description: Successful response
          content:
            text/html:
              schema:
                $ref: "#/components/schemas/StaticIpInfo"
  /getStaticIP:
    get:
      tags:
        - Network
      deprecated: true
      summary: Query networking status
      description: Query current networking status
      externalDocs:
        description: Arylic Developers
        url: "https://developer.arylic.com/httpapi/#http-api"
      operationId: getStaticIP
      responses:
        "200":
          description: Successful response
          content:
            text/html:
              schema:
                type: string
      parameters: []
  /wlanGetConnectState:
    get:
      tags:
        - Network
      summary: Get the connection status
      description: |-
        Makes a call to
        https://10.10.10.254/httpapi.asp?command=wlanGetConnectState


        Note the return result is not in json.


        Return string:

        Return string Description

        PROCESS In progress

        PAIRFAIL Wrong password

        FAIL Connect fail

        OK connected

      externalDocs:
        description: HTTP API for WiiM PRODUCTS Version 1.2
        url: "https://www.wiimhome.com/pdf/HTTP%20API%20for%20WiiM%20Products.pdf"
      operationId: wlanGetConnectState
      responses:
        "200":
          description: Successful response
          content:
            text/html:
              schema:
                type: string
              examples:
                PROCESS:
                  summary: In progress
                  value: PROCESS
                PAIRFAIL:
                  summary: Wrong password
                  value: PAIRFAIL
                FAIL:
                  summary: Connect fail
                  value: FAIL
                OK:
                  summary: Connected
                  value: OK
      parameters: []
  /getPlayerStatus:
    get:
      tags:
        - Playback control
      summary: Get the playback status
      description: "Makes a call to https://10.10.10.254/httpapi.asp?command=getPlayerStatus"
      externalDocs:
        description: HTTP API for WiiM PRODUCTS Version 1.2
        url: "https://www.wiimhome.com/pdf/HTTP%20API%20for%20WiiM%20Products.pdf"
      responses:
        "200":
          description: Successful response
          content:
            text/html:
              schema:
                $ref: "#/components/schemas/PlayerStatus"
      parameters: []
      operationId: getPlayerStatus
  "/setPlayerCmd:hex_playlist:url:{index}":
    get:
      summary: "Play a specific track from a playlist by URL and index"
      description: |
        http://10.10.10.254/httpapi.asp?command=setPlayerCmd:hex_playlist:url:<index>

        Play the URl (URI is the m3u or ASX playlist link, index is the start
        index), here, url should be hexed (please refer to 1.3)
      externalDocs:
        description: HTTP API for WiiM PRODUCTS Version 1.2
        url: "https://www.wiimhome.com/pdf/HTTP%20API%20for%20WiiM%20Products.pdf"
      parameters:
        - name: index
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
      tags:
        - Playback control
      deprecated: true
      operationId: setPlayerCmdHexPlaylistUrl
  "/setPlayerCmd:pause":
    get:
      summary: Pause
      description: "https://10.10.10.254/httpapi.asp?command=setPlayerCmd:pause"
      externalDocs:
        description: HTTP API for WiiM PRODUCTS Version 1.2
        url: "https://www.wiimhome.com/pdf/HTTP%20API%20for%20WiiM%20Products.pdf"
      parameters: []
      responses:
        "200":
          $ref: "#/components/responses/StringOK"
      tags:
        - Playback control
      operationId: setPlayerCmdPause
  "/setPlayerCmd:resume":
    get:
      summary: Resume
      description: "https://10.10.10.254/httpapi.asp?command=setPlayerCmd:resume"
      externalDocs:
        description: HTTP API for WiiM PRODUCTS Version 1.2
        url: "https://www.wiimhome.com/pdf/HTTP%20API%20for%20WiiM%20Products.pdf"
      parameters: []
      responses:
        "200":
          $ref: "#/components/responses/StringOK"
      tags:
        - Playback control
      operationId: setPlayerCmdResume
  "/setPlayerCmd:onepause":
    get:
      summary: Toggle pause/play
      description: |-
        https://10.10.10.254/httpapi.asp?command=setPlayerCmd:onepause

        If the state is paused, resume it; otherwise, pause it.
      externalDocs:
        description: HTTP API for WiiM PRODUCTS Version 1.2
        url: "https://www.wiimhome.com/pdf/HTTP%20API%20for%20WiiM%20Products.pdf"
      parameters: []
      responses:
        "200":
          $ref: "#/components/responses/StringOK"
      tags:
        - Playback control
      operationId: setPlayerCmdOnePause
  "/setPlayerCmd:prev":
    get:
      summary: Previous
      description: "https://10.10.10.254/httpapi.asp?command=setPlayerCmd:prev"
      externalDocs:
        description: HTTP API for WiiM PRODUCTS Version 1.2
        url: "https://www.wiimhome.com/pdf/HTTP%20API%20for%20WiiM%20Products.pdf"
      parameters: []
      responses:
        "200":
          $ref: "#/components/responses/StringOK"
      tags:
        - Playback control
      operationId: setPlayerCmdPrev
  "/setPlayerCmd:next":
    get:
      summary: Next
      description: "https://10.10.10.254/httpapi.asp?command=setPlayerCmd:next"
      externalDocs:
        description: HTTP API for WiiM PRODUCTS Version 1.2
        url: "https://www.wiimhome.com/pdf/HTTP%20API%20for%20WiiM%20Products.pdf"
      parameters: []
      responses:
        "200":
          $ref: "#/components/responses/StringOK"
      tags:
        - Playback control
      operationId: setPlayerCmdNext
  "/setPlayerCmd:seek:position":
    get:
      summary: Seek
      description: |-
        https://10.10.10.254/httpapi.asp?command=setPlayerCmd:seek:position
        Position is from 0 to duration in second.
      externalDocs:
        description: HTTP API for WiiM PRODUCTS Version 1.2
        url: "https://www.wiimhome.com/pdf/HTTP%20API%20for%20WiiM%20Products.pdf"
      parameters: []
      responses:
        "200":
          $ref: "#/components/responses/StringOK"
      tags:
        - Playback control
      operationId: setPlayerCmdSeekPosition
  "/setPlayerCmd:stop":
    get:
      summary: Stop
      description: "https://10.10.10.254/httpapi.asp?command=setPlayerCmd:stop"
      externalDocs:
        description: HTTP API for WiiM PRODUCTS Version 1.2
        url: "https://www.wiimhome.com/pdf/HTTP%20API%20for%20WiiM%20Products.pdf"
      parameters: []
      responses:
        "200":
          $ref: "#/components/responses/StringOK"
      tags:
        - Playback control
      operationId: setPlayerCmdStop
  "/setPlayerCmd:vol:{value}":
    get:
      summary: Set volume
      description: |-
        https://10.10.10.254/httpapi.asp?command=setPlayerCmd:vol:value
        Value can be 0 to 100.
      externalDocs:
        description: HTTP API for WiiM PRODUCTS Version 1.2
        url: "https://www.wiimhome.com/pdf/HTTP%20API%20for%20WiiM%20Products.pdf"
      parameters:
        - name: value
          in: path
          required: true
          schema:
            type: integer
          description: Value can be 0 to 100.
      responses:
        "200":
          $ref: "#/components/responses/StringOK"
      tags:
        - Playback control
      operationId: setPlayerCmdVol
  "/setPlayerCmd:mute:{n}":
    get:
      summary: Mute
      description: |-
        https://10.10.10.254/httpapi.asp?command=setPlayerCmd:mute:n

        Mute: n=1

        Unmute: n=0

        The slave mute state will be set at the same time when it's in group
        play.
      externalDocs:
        description: HTTP API for WiiM PRODUCTS Version 1.2
        url: "https://www.wiimhome.com/pdf/HTTP%20API%20for%20WiiM%20Products.pdf"
      parameters:
        - name: "n"
          in: path
          required: true
          schema:
            type: string
            enum:
              - "0"
              - "1"
            default: "1"
          description: |-
            Mute: n=1
            Unmute: n=0
      responses:
        "200":
          $ref: "#/components/responses/StringOK"
      tags:
        - Playback control
      operationId: setPlayerCmdMute
  "/setPlayerCmd:loopmode:{n}":
    get:
      summary: Loop mode set
      description: |
        https://10.10.10.254/httpapi.asp?command=setPlayerCmd:loopmode:n

        n = 
        0 - Sequence, no loop
        1 - Single loop
        2 - Shuffle loop
        -1 - Sequence loop
      externalDocs:
        description: HTTP API for WiiM PRODUCTS Version 1.2
        url: "https://www.wiimhome.com/pdf/HTTP%20API%20for%20WiiM%20Products.pdf"
      parameters:
        - name: "n"
          in: path
          required: true
          schema:
            type: string
            enum:
              - "0"
              - "1"
              - "2"
              - "-1"
          description: |-
            0 Sequence, no loop
            1 Single loop
            2 Shuffle loop
            -1 Sequence loop
      responses:
        "200":
          $ref: "#/components/responses/StringOK"
      tags:
        - Playback control
      operationId: setPlayerCmdLoopmode
  /getNewAudioOutputHardwareMode:
    get:
      summary: Get audio output mode
      description: |-
        JSON Response:
        {"hardware":"2","source":"0","audiocast":"0"}

        Description:
        Field Description
        hardware Hardware Interface output mode:
        1: AUDIO_OUTPUT_SPDIF_MODE
        2: AUDIO_OUTPUT_AUX_MODE
        3: AUDIO_OUTPUT_COAX_MODE
        source BT source output mode:
        0: disable
        1: active
        audiocast Audio cast output mode:
        0: disable
        1: active
      externalDocs:
        description: HTTP API for WiiM PRODUCTS Version 1.2
        url: "https://www.wiimhome.com/pdf/HTTP%20API%20for%20WiiM%20Products.pdf"
      parameters: []
      responses:
        "200":
          description: Successful response
          content:
            text/html:
              schema:
                type: object
                properties:
                  hardware:
                    type: string
                    description: |-
                      Hardware Interface output mode:
                      1: AUDIO_OUTPUT_SPDIF_MODE
                      2: AUDIO_OUTPUT_AUX_MODE
                      3: AUDIO_OUTPUT_COAX_MODE
                    example: "2"
                  source:
                    type: string
                    description: |-
                      BT source output mode:
                      0: disable
                      1: active
                    example: "0"
                  audiocast:
                    type: string
                    description: |-
                      Audio cast output mode:
                      0: disable
                      1: active
                    example: "0"
      tags:
        - Audio Output Control
      operationId: getNewAudioOutputHardwareMode
  "/setAudioOutputHardwareMode:{n}":
    get:
      summary: Set audio output mode
      description: |-
        Field Description
        Hardware Interface output mode:
        1: AUDIO_OUTPUT_SPDIF_MODE
        2: AUDIO_OUTPUT_AUX_MODE
        3: AUDIO_OUTPUT_COAX_MODE
        Response is 'OK'
      externalDocs:
        description: HTTP API for WiiM PRODUCTS Version 1.2
        url: "https://www.wiimhome.com/pdf/HTTP%20API%20for%20WiiM%20Products.pdf"
      parameters:
        - name: "n"
          in: path
          required: true
          schema:
            type: string
            enum:
              - "1"
              - "2"
              - "3"
          description: |-
            Hardware Interface output mode:
            1: AUDIO_OUTPUT_SPDIF_MODE
            2: AUDIO_OUTPUT_AUX_MODE
            3: AUDIO_OUTPUT_COAX_MODE
      responses:
        "200":
          $ref: "#/components/responses/StringOK"
      tags:
        - Audio Output Control
      operationId: setAudioOutputHardwareMode
  /getMetaInfo:
    get:
      summary: Get Current Track Metadata
      description: |-
        JSON Response
        {
         "metaData": {
          "album": "Country Heat",
          "title": "Old Dirt Roads",
          "subtitle": "",
          "artist": "Owen Riegling",
          "albumArtURI ": "https://m.media-amazon.com/images/I/51iU0odzJwL.jpg",
          "sampleRate ": "44100",
          "bitDepth": "16",
          "bitRate": "63",
          "trackId": "s6707",
         }
        }
      externalDocs:
        description: HTTP API for WiiM PRODUCTS Version 1.2
        url: "https://www.wiimhome.com/pdf/HTTP%20API%20for%20WiiM%20Products.pdf"
      parameters: []
      responses:
        "200":
          description: Successful response
          content:
            text/html:
              schema:
                $ref: "#/components/schemas/TrackMetadata"
      tags:
        - Track Metadata
      operationId: getMetaInfo
  "/setPlayerCmd:play:{url}":
    get:
      summary: Play audio URL
      description: |-
        https://10.10.10.254/httpapi.asp?command=setPlayerCmd:play:url
        Play the URL. URL points to an audio stream address.
        Response is always 'OK' now
      externalDocs:
        description: HTTP API for WiiM PRODUCTS Version 1.2
        url: "https://www.wiimhome.com/pdf/HTTP%20API%20for%20WiiM%20Products.pdf"
      parameters:
        - name: url
          in: path
          required: true
          schema:
            type: string
            default: >-
              http://as-hls-ww-live.akamaized.net/pool_01505109/live/ww/bbc_radio_one/bbc_radio_one.isml/bbc_radio_one-audio%3d96000.norewind.m3u8
          description: URL points to an audio stream address
      responses:
        "200":
          $ref: "#/components/responses/StringOK"
      tags:
        - Playback control
      operationId: setPlayerCmdPlayUrl
  "/setPlayerCmd:playlist:{url}:{index}":
    get:
      summary: Play audio playlist
      description: |-
        https://10.10.10.254/httpapi.asp?command=setPlayerCmd:playlist:url:<index>

        Play the playlist with the URL (URL points to the m3u or ASX playlist
        link, index is the start index).

        Response is always 'OK' now.
      externalDocs:
        description: HTTP API for WiiM PRODUCTS Version 1.2
        url: "https://www.wiimhome.com/pdf/HTTP%20API%20for%20WiiM%20Products.pdf"
      parameters:
        - name: index
          in: path
          required: true
          schema:
            type: string
        - name: url
          in: path
          required: true
          schema:
            type: string
            default: >-
              https://gist.githubusercontent.com/bpsib/67089b959e4fa898af69fea59ad74bc3/raw/685789e28187c0a15da978b51d436a140d5ea207/BBC-Radio-HLS.m3u
      responses:
        "200":
          $ref: "#/components/responses/StringOK"
      tags:
        - Playback control
      operationId: setPlayerCmdPlaylistUrl
  /EQOn:
    get:
      summary: Turn on the EQ
      description: |-
        https://10.10.10.254/httpapi.asp?command=EQOn

      externalDocs:
        description: HTTP API for WiiM PRODUCTS Version 1.2
        url: "https://www.wiimhome.com/pdf/HTTP%20API%20for%20WiiM%20Products.pdf"
      parameters: []
      responses:
        "200":
          description: Default response
          content:
            text/html:
              schema:
                type: object
                properties:
                  status:
                    type: string
              examples:
                OK:
                  summary: OK
                  value:
                    status: OK
                FAILED:
                  summary: Failed
                  value:
                    status: Failed
      tags:
        - EQ
      operationId: setEQOn
  /EQOff:
    get:
      summary: Turn off the EQ setting
      description: |
        https://10.10.10.254/httpapi.asp?command=EQOff

      externalDocs:
        description: HTTP API for WiiM PRODUCTS Version 1.2
        url: "https://www.wiimhome.com/pdf/HTTP%20API%20for%20WiiM%20Products.pdf"
      parameters: []
      responses:
        "200":
          description: Default response
          content:
            text/html:
              schema:
                type: object
                properties:
                  status:
                    type: string
              examples:
                OK:
                  summary: OK
                  value:
                    status: OK
                FAILED:
                  summary: Failed
                  value:
                    status: Failed
      tags:
        - EQ
      operationId: setEQOff
  /EQGetStat:
    get:
      summary: Check if the EQ is ON or OFF
      description: |-
        http://10.10.10.254/httpapi.asp?command=EQGetStat

        JSON Response:
        {"EQStat":"On"} or {"EQStat":"Off"}
      externalDocs:
        description: HTTP API for WiiM PRODUCTS Version 1.2
        url: "https://www.wiimhome.com/pdf/HTTP%20API%20for%20WiiM%20Products.pdf"
      parameters: []
      responses:
        "222":
          description: Default response
          content:
            text/html:
              schema: {}
      tags:
        - EQ
      operationId: getEQStat
  /EQGetList:
    get:
      summary: Check all the possible EQ settings
      description: |
        http://10.10.10.254/httpapi.asp?command=EQGetList


        Response:

        ["Flat", "Acoustic", "Bass Booster", "Bass Reducer", "Classical",
        "Dance", "Deep", "Electronic",

        "Hip-Hop", "Jazz", "Latin", "Loudness", "Lounge", "Piano", "Pop", "R&B",
        "Rock", "Small

        Speakers", "Spoken Word", "Treble Booster", "Treble Reducer", "Vocal
        Booster"]
      externalDocs:
        description: HTTP API for WiiM PRODUCTS Version 1.2
        url: "https://www.wiimhome.com/pdf/HTTP%20API%20for%20WiiM%20Products.pdf"
      parameters: []
      responses:
        "200":
          description: Default response
          content:
            text/html:
              schema: {}
      tags:
        - EQ
      operationId: getEQList
  "/EQLoad:{name}":
    get:
      summary: Set the specific EQ with name
      description: |-
        http://10.10.10.254/httpapi.asp?command=EQLoad:xxx


        Note: xxx is the one of the name in the list returned by EQGetList,
        i.e., EQLoad:Flat
      externalDocs:
        description: HTTP API for WiiM PRODUCTS Version 1.2
        url: "https://www.wiimhome.com/pdf/HTTP%20API%20for%20WiiM%20Products.pdf"
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
            enum:
              - Flat
              - Acoustic
              - Bass Booster
              - Bass Reducer
              - Classical
              - Dance
              - Deep
              - Electronic
              - Hip-Hop
              - Jazz
              - Latin
              - Loudness
              - Lounge
              - Piano
              - Pop
              - R&B
              - Rock
              - Small Speakers
              - Spoken Word
              - Treble Booster
              - Treble Reducer
              - Vocal Booster
          description: "The name in the list returned by EQGetList, i.e., EQLoad:Flat"
      operationId: loadEQByName
      responses:
        "200":
          description: Default response
          content:
            text/html:
              schema:
                type: object
                properties:
                  status:
                    type: string
              examples:
                OK:
                  summary: OK
                  value:
                    status: OK
                FAILED:
                  summary: Failed
                  value:
                    status: Failed
      tags:
        - EQ
  /reboot:
    get:
      summary: Reboot
      description: |-
        http://10.10.10.254/httpapi.asp?command=reboot

        JSON Response:
        {"status":"OK"}
      externalDocs:
        description: HTTP API for WiiM PRODUCTS Version 1.2
        url: "https://www.wiimhome.com/pdf/HTTP%20API%20for%20WiiM%20Products.pdf"
      parameters: []
      operationId: rebootDevice
      responses:
        "200":
          description: Default response
          content:
            text/html:
              schema:
                type: object
                properties:
                  status:
                    type: string
              examples:
                OK:
                  summary: Response
                  value:
                    status: OK
      tags:
        - Device control
  "/setShutdown:{sec}":
    get:
      summary: Shutdown
      description: |
        http://10.10.10.254/httpapi.asp?command=setShutdown:sec

        Shutdown device in sec

        sec:
        0: shutdown immediately
        -1: cancel the previous shutdown timer

      externalDocs:
        description: HTTP API for WiiM PRODUCTS Version 1.2
        url: "https://www.wiimhome.com/pdf/HTTP%20API%20for%20WiiM%20Products.pdf"
      parameters:
        - name: sec
          in: path
          required: true
          schema:
            type: string
            default: "0"
          description: |-
            Shutdown device in sec

            0: shutdown immediately
            -1: cancel the previous shutdown timer
      operationId: setShutdownTimer
      responses:
        "200":
          description: Default response
          content:
            text/html:
              schema:
                type: object
                properties:
                  status:
                    type: string
              examples:
                OK:
                  summary: OK
                  value:
                    status: OK
                FAILED:
                  summary: Failed
                  value:
                    status: Failed
      tags:
        - Device control
  /getShutdown:
    get:
      summary: Get the shutdown timer
      description: |
        http://10.10.10.254/httpapi.asp?command=getShutdown

        Return the seconds
      externalDocs:
        description: HTTP API for WiiM PRODUCTS Version 1.2
        url: "https://www.wiimhome.com/pdf/HTTP%20API%20for%20WiiM%20Products.pdf"
      parameters: []
      operationId: getShutdownTimer
      responses:
        "200":
          description: Default response
          content:
            text/html:
              schema:
                type: integer
              examples:
                OK:
                  summary: Number of seconds
                  value: 0
      tags:
        - Device control
  "/timeSync:{YYYYMMDDHHMMSS}":
    get:
      summary: Get network time
      description: |-
        If the device has no internet access, you need to sync its time with:


        http://10.10.10.254/httpapi.asp?command=timeSync:YYYYMMDDHHMMSS


        YYYY is year (such as 2015), MM is month (01~12), DD is day (01~31), HH
        is hour (00~23),

        MM is minute (00~59), SS is second (00~59)


        In UTC
      externalDocs:
        description: HTTP API for WiiM PRODUCTS Version 1.2
        url: "https://www.wiimhome.com/pdf/HTTP%20API%20for%20WiiM%20Products.pdf"
      parameters:
        - name: YYYYMMDDHHMMSS
          in: path
          required: true
          schema:
            type: string
      operationId: setTimeSync
      responses:
        "200":
          description: Default response
          content:
            text/html:
              schema: {}
      tags:
        - Alarm clock
  "/setAlarmClock:{n}:{trig}:{op}:{time}:{day}:{url}":
    get:
      summary: Set Alarm
      description: |-
        http://10.10.10.254/httpapi.asp?command=setAlarmClock:n:trig:op:time[:day][:url]


        n: 0~2, currently support max 3 alarm


        trig: the alarm trigger:

        0 cancel the alarm, for example: setAlarmClock:n:0

        1 once, day should be YYYYMMDD

        2 every day

        3 every week, day should be 2 bytes ("00"~"06"), means from Sunday to
        Saturday.

        4 every week, day should be 2 bytes, the bit 0 to bit 6 means the
        effect, for example,

        "7F" means every day in week, "01" means only Sunday

        5 every month, day should be 2 bytes ("01"~"31")


        op: the action

        0 shell execute

        1 playback or ring

        2 stop playback

        time: should be HHMMSS, in UTC


        day:

        if trigger is 0 or 2, no need to set.

        if trigger is 1, should be YYYYMMDD ( %04d%02d%02d)

        if trigger is 3, day should be 2 bytes ("00"~"06"), means from Sunday to
        Saturday.

        if trigger is 4, day should be 2 bytes, the bit 0 to bit 6 means the
        effect, for example,

        "7F" means every day in week, "01" means only Sunday

        if trigger is 5, day should be 2 bytes ("01"~"31")


        url: the shell path or playback url, should less than 256 bytes
      externalDocs:
        description: HTTP API for WiiM PRODUCTS Version 1.2
        url: "https://www.wiimhome.com/pdf/HTTP%20API%20for%20WiiM%20Products.pdf"
      parameters:
        - name: "n"
          in: path
          required: true
          schema:
            type: string
            enum:
              - "0"
              - "1"
              - "2"
          description: |
            The alarm clock number

            currently support max 3 alarm
        - name: trig
          in: path
          required: true
          schema:
            type: string
            enum:
              - "0"
              - "1"
              - "2"
              - "3"
              - "4"
              - "5"
          description: |
            The alarm trigger


            0 cancel the alarm, for example: setAlarmClock:n:0

            1 once, day should be YYYYMMDD

            2 every day

            3 every week, day should be 2 bytes (00"~"06"), means from Sunday to
            Saturday.

            4 every week, day should be 2 bytes, the bit 0 to bit 6 means the
            effect, for example,

            "7F" means every day in week, "01" means only Sunday

            5 every month, day should be 2 bytes ("01"~"31")
        - name: op
          in: path
          required: true
          schema:
            type: string
            enum:
              - "0"
              - "1"
              - "2"
          description: |
            The action

            0 shell execute
            1 playback or ring
            2 stop playback
        - name: time
          in: path
          required: true
          schema:
            type: string
          description: "should be HHMMSS, in UTC"
        - name: day
          in: path
          required: true
          schema:
            type: string
          description: |-
            if trigger is 0 or 2, no need to set.


            if trigger is 1, should be YYYYMMDD ( %04d%02d%02d)


            if trigger is 3, day should be 2 bytes ("00"~"06"), means from
            Sunday to Saturday.


            if trigger is 4, day should be 2 bytes, the bit 0 to bit 6 means the
            effect, for example,

            "7F" means every day in week, "01" means only Sunday


            if trigger is 5, day should be 2 bytes ("01"~"31")
        - name: url
          in: path
          required: true
          schema:
            type: string
          description: "The shell path or playback url, should less than 256 bytes"
      operationId: setAlarmClock
      responses:
        "200":
          description: Default response
          content:
            text/html:
              schema: {}
      tags:
        - Alarm clock
  "/getAlarmClock:{n}":
    get:
      summary: ""
      description: |
        http://10.10.10.254/httpapi.asp?command=getAlarmClock:n

        n: 0~2, currently support max 3 alarm
        {"enable":"1",
        "trigger":"%d",
        "operation":"%d",
        "date"::"%02d:%02d:%02d", //if not a "every day" alarm, no this
        "week_day":"%d", //if not a "every week" alarm, no this
        "day":"%02d", //if not a "every month" alarm, no this
        "time":"%02d:02d:%02d",
        "path":"%s""}
      externalDocs:
        description: HTTP API for WiiM PRODUCTS Version 1.2
        url: "https://www.wiimhome.com/pdf/HTTP%20API%20for%20WiiM%20Products.pdf"
      parameters:
        - name: "n"
          in: path
          required: true
          schema:
            type: string
            enum:
              - "0"
              - "1"
              - "2"
            default: ""
          description: The alarm clock number
      operationId: getAlarmClock
      responses:
        "200":
          description: Default response
          content:
            text/html:
              schema: {}
      tags:
        - Alarm clock
  /alarmStop:
    get:
      summary: Stop the current alarm
      description: "http://10.10.10.254/httpapi.asp?command=alarmStop"
      externalDocs:
        description: HTTP API for WiiM PRODUCTS Version 1.2
        url: "https://www.wiimhome.com/pdf/HTTP%20API%20for%20WiiM%20Products.pdf"
      parameters: []
      operationId: stopAlarmClock
      responses:
        "200":
          description: Default response
          content:
            text/html:
              schema: {}
      tags:
        - Alarm clock
  "/setPlayerCmd:switchmode:{mode}":
    get:
      summary: Switch the source input
      description: |
        http://10.10.10.254/httpapi.asp?command=setPlayerCmd:switchmode:%s

        the mode can be the text as below:
        line-in (it refers to aux-in too)
        bluetooth
        optical
        udisk
        wifi
      externalDocs:
        description: HTTP API for WiiM PRODUCTS Version 1.2
        url: "https://www.wiimhome.com/pdf/HTTP%20API%20for%20WiiM%20Products.pdf"
      parameters:
        - name: mode
          in: path
          required: true
          schema:
            type: string
            enum:
              - line-in
              - bluetooth
              - optical
              - udisk
              - wifi
      operationId: setPlayerCmdSwitchMode
      responses:
        "200":
          description: Default response
          content:
            text/html:
              schema: {}
      tags:
        - Source Input Switch
  "/MCUKeyShortClick:{n}":
    get:
      summary: Play preset with preset number
      description: |
        http://10.10.10.254/httpapi.asp?command=MCUKeyShortClick:%d

        %d: Range is from 1 to 12
      externalDocs:
        description: HTTP API for WiiM PRODUCTS Version 1.2
        url: "https://www.wiimhome.com/pdf/HTTP%20API%20for%20WiiM%20Products.pdf"
      parameters:
        - name: "n"
          in: path
          required: true
          schema:
            type: string
            enum:
              - "1"
              - "2"
              - "3"
              - "4"
              - "5"
              - "6"
              - "7"
              - "8"
              - "9"
              - "10"
              - "11"
              - "12"
          description: Preset number
      operationId: getMCUKeyShortClick
      responses:
        "200":
          $ref: "#/components/responses/StringOK"
      tags:
        - Presets
  /getPresetInfo:
    get:
      summary: Get Preset List
      description: |
        http://10.10.10.254/httpapi.asp?command=getPresetInfo


        JSON Response

        {
          "preset_num": 3,
          "preset_list": [
          {
            "number": 1,
            "name": "BBC Radio Norfolk",
            "url": "http:\/\/as-hls-wwlive.akamaized.net\/pool_904\/live\/ww\/bbc_radio_norfolk\/bbc_radio_norfolk.isml\/bbc_radio_norfolk-audio%3d96000.norewind.m3u8",
            "source": "Linkplay Radio",
            "picurl": "http:\/\/cdnprofiles.tunein.com\/s6852\/images\/logoq.jpg?t=638353933090000000"
          }, 
          {
            "number": 6,
            "name": "Radio Paradise",
            "url": "http:\/\/stream.radioparadise.com\/flacm",
            "source": "RadioParadise",
            "picurl": "https:\/\/cdnprofiles.tunein.com\/s13606\/images\/logod.png?t=637541039930000000"
          }, 
          {
            "number": 8,
            "name": "1. Country Heat",
            "url": "unknow",
            "source": "Prime",
            "picurl": "https:\/\/m.media-amazon.com\/images\/I\/51uR6AJUAQL.jpg"
          }
          ]
        }


        Description

        Field type Description

        preset_num int Total number of presets

        preset_list json array Preset list information

        number int Preset index (Start from 1)

        name string Playlist name

        url string Play url

        source string Music source

        picurl string Cover picture url

      externalDocs:
        description: HTTP API for WiiM PRODUCTS Version 1.2
        url: "https://www.wiimhome.com/pdf/HTTP%20API%20for%20WiiM%20Products.pdf"
      parameters: []
      operationId: getPresetInfo
      responses:
        "200":
          description: Successful response
          content:
            text/html:
              schema:
                $ref: "#/components/schemas/PresetList"
      tags:
        - Presets
  /startbtdiscovery:3:
    get:
      tags:
        - Bluetooth
      summary: Start Bluetooth device scan
      description: |-
        Args: 3 (Not sure what this argument means, I've only seen the app use the value 3 for it. Works with other integers and successfully starts a BT scan. Maybe a max list size?)
      externalDocs:
        description: WiiM Extended HTTP API by DanBrezeanu
        url: "https://github.com/DanBrezeanu/wiim-extended-http-api"
      operationId: startBtDiscovery
      responses:
        "200":
          $ref: "#/components/responses/StringOK"
  /getbtdiscoveryresult:
    get:
      tags:
        - Bluetooth
      summary: Get Bluetooth device scan result
      description: |-
        First do a startbtdiscovery:3: to start the scan, then use this to get the result.

        Output (JSON):
        num: Number of found devices
        scan_status: BT scan step
          0: Not started
          1: Initializing
          2: ??? (never seen it)
          3: Scanning
          4: Finished scanning
        list: List of found devices

        Already paired devices may be listed as well.
      externalDocs:
        description: WiiM Extended HTTP API by DanBrezeanu
        url: "https://github.com/DanBrezeanu/wiim-extended-http-api"
      operationId: getBtDiscoveryResult
      responses:
        "200":
          description: Successful response
          content:
            text/html:
              schema:
                $ref: "#/components/schemas/BluetoothDeviceList"
  /clearbtdiscoveryresult:
    get:
      tags:
        - Bluetooth
      summary: Clear Bluetooth device scan result
      description: Clears the Bluetooth device scan results
      externalDocs:
        description: WiiM Extended HTTP API by DanBrezeanu
        url: "https://github.com/DanBrezeanu/wiim-extended-http-api"
      operationId: clearBtDiscoveryResult
      responses:
        "200":
          $ref: "#/components/responses/StringOK"
  /getbthistory:
    get:
      tags:
        - Bluetooth
      summary: Get paired Bluetooth devices
      description: |-
        Output (JSON):

        num: Number of found devices
        scan_status: BT scan step
        1: Initializing
        2: ??? (never seen it)
        3: Scanning
        4: Finished scanning
        list: List of found devices
      externalDocs:
        description: WiiM Extended HTTP API by DanBrezeanu
        url: "https://github.com/DanBrezeanu/wiim-extended-http-api"
      operationId: getBtHistory
      responses:
        "200":
          description: Successful response
          content:
            text/html:
              schema:
                $ref: "#/components/schemas/BluetoothDeviceList"
  /connectbta2dpsynk:{BT_MAC_ADDRESS}:
    get:
      tags:
        - Bluetooth
      summary: Connect to a Bluetooth device
      description: |-
        Example: https://192.168.1.100/httpapi.asp?command=connectbta2dpsynk:9c:2a:be:2e:ce:f1

        Output:
        Success: OK
        Error: Failed

        Observations: The device should be an Audio Sink (e.g. speaker, A/V reciever). The audio output will be changed to the device.
      externalDocs:
        description: WiiM Extended HTTP API by DanBrezeanu
        url: "https://github.com/DanBrezeanu/wiim-extended-http-api"
      operationId: connectBtA2dpsynk
      parameters:
        - $ref: "#/components/parameters/BT_MAC_ADDRESS"
      responses:
        "200":
          description: Successful response
          content:
            text/html:
              schema:
                type: string
              examples:
                OK:
                  summary: Response OK
                  value: OK
                Failed:
                  summary: Response Failed
                  value: Failed
  /disconnectbta2dpsynk:{BT_MAC_ADDRESS}:
    get:
      tags:
        - Bluetooth
      summary: Disconnect from a Bluetooth device
      description: |-
        Example: https://192.168.1.100/httpapi.asp?command=disconnectbta2dpsynk:9c:2a:be:2e:ce:f1
      externalDocs:
        description: WiiM Extended HTTP API by DanBrezeanu
        url: "https://github.com/DanBrezeanu/wiim-extended-http-api"
      operationId: disconnectBtA2dpsynk
      parameters:
        - $ref: "#/components/parameters/BT_MAC_ADDRESS"
      responses:
        "200":
          $ref: "#/components/responses/StringOK"
  /getbtpairstatus:
    get:
      tags:
        - Bluetooth
      summary: Get Bluetooth pairing status
      description: |-
        Example: https://192.168.1.100/httpapi.asp?command=getbtpairstatus

        Output (JSON):
        result: Pair status
        0: Not paired
        1: Disconnected
        2: Connecting (assumption, never seen it)
        3: Connected
      externalDocs:
        description: WiiM Extended HTTP API by DanBrezeanu
        url: "https://github.com/DanBrezeanu/wiim-extended-http-api"
      operationId: getBtPairStatus
      responses:
        "200":
          description: Successful response
          content:
            text/html:
              schema:
                type: object
                properties:
                  result:
                    type: integer
                    description: |-
                      Pair status
                      0: Not paired
                      1: Disconnected
                      2: Connecting
                      3: Connected
                    example: 1
                    enum:
                      - 0
                      - 1
                      - 2
                      - 3

externalDocs:
  url: "https://github.com/cvdlinden/wiim-httpapi"

security: []

components:
  links: {}
  callbacks: {}

  #-------------------------------
  # Reusable schemas (data models)
  #-------------------------------
  schemas:
    DeviceStatus: # Can be referenced as "#/components/schemas/DeviceStatus"
      type: object
      properties:
        language:
          type: string
          description: The device language
          example: "en_us"
        ssid:
          type: string
          description: |-
            Name of the device. Device's own SSID when in WiFi pairing
            mode or when device's WiFi hotspot is active
          example: "WiiM-1234"
        hideSSID:
          type: string
          description: |-
            When the device is operating as a WiFi hotspot, this flag
            determines whether its SSID should be hidden or visible 0:
            ssid is visible 1: ssid is hidden
          example: "0"
        SSIDStrategy:
          type: string
          example: "2"
        branch:
          type: string
          description: Code branch
          example: "A31_stable_4.6"
        firmware:
          type: string
          description: Current firmware version
          example: "Linkplay.5.0.704664"
        build:
          type: string
          description: |-
            Possible values: release, debug, backup release: this is a
            release version debug: this is a debug version backup:
            this is a backup version
          example: "release"
        project:
          type: string
          description: The project name
          example: "WiiM_Mini"
        priv_prj:
          type: string
          description: Project name which would stand for a specific board
          example: "WiiM_Mini"
        project_build_name:
          type: string
          description: Code identifier for customized release
          example: "WiiM_Mini"
        Release:
          type: string
          description: "Firmware build date Format: YYYYMMDD"
          example: "20250101"
        FW_Release_version:
          type: string
          description: Reserved
          example: ""
        PCB_version:
          type: string
          description: PCB version/revision
          example: "5"
        cast_enable:
          type: integer
          description: |-
            Flag for casting feature 0: casting is disabled 1: casting
            is enabled
          example: 1
        cast_usage_report:
          type: integer
          description: Reserved
          example: 1
        group:
          type: string
          description: |-
            0 means it's a master speaker or standalone,  1 means a
            slave speaker in group
          example: "0"
        master_uuid:
          type: string
          description: |-
            Exist when working in slave mode, showing the UUID of
            master device.
          example: "A7A50887ACBC9B36"
        slave_mask:
          type: string
          description: |-
            Exist when working in slave mode, showing if the device
            support mask feature. 0 means not supported.
          example: "0"
        wmrm_version:
          type: string
          description: |-
            LinkPlay's MRM SDK version, Multiroom library version,
            version 4.2 or above won't work with any version below 4.2
          example: "4.3"
        wmrm_sub_ver:
          type: string
          description: Multiroom library sub version
          example: "1"
        expired:
          type: string
          description: Reserved
          example: "0"
        internet:
          type: string
          description: "Current status of internet access: 0: not ready 1: ready"
          example: "1"
        uuid:
          type: string
          description: |-
            The unique ID of the device (will remain after device
            reboot)
          example: "FF31F09E1A5020113B0A3918"
        MAC:
          type: string
          description: |-
            MAC address of the device when working in hotspot mode,
            will show on APP and also the sticker on module/device.
          example: "08:E9:F6:8F:8F:A2"
        STA_MAC:
          type: string
          description: MAC address of the device when working in station mode
          example: "00:00:00:00:00:00"
        BT_MAC:
          type: string
          description: The BT MAC address of the device
          example: "08:E9:F6:8F:8F:A3"
        AP_MAC:
          type: string
          description: The MAC address of the AP that the device is connected to
          example: "0A:E9:F6:8F:8F:A2"
        ETH_MAC:
          type: string
          description: |-
            The MAC address of the device when it's connected to
            ethernet
          example: "08:E9:F6:8F:8F:A9"
        InitialConfiguration:
          type: string
          description: |-
            Flag for initial configuration 0: not configured 1:
            configured
          example: "1"
        temperature_power_control:
          type: string
          description: Reserved
          example: "1000"
        temperature_cpu:
          type: string
          description: Reserved
          example: "32"
        temperature_tmp102:
          type: string
          description: Reserved
          example: "-998"
        CountryCode:
          type: string
          description: The country code
          example: "US"
        CountryRegion:
          type: string
          description: The country region
          example: "1"
        date:
          type: string
          description: Current Date
          example: "2025:01:01"
        time:
          type: string
          description: Current local time
          example: "00:00:00"
        tz:
          type: string
          description: Timezone offset
          example: "0.0000"
        dst_enable:
          type: string
          description: Daylight saving time enable
          example: "1"
        netstat:
          type: string
          description: |-
            Current WiFi status: 0: no network 1: connected to the
            internet 2: connected to the local network
          example: "1"
        essid:
          type: string
          description: SSID of the WiFi the device is connected to in HEX format
          example: ""
        apcli0:
          type: string
          description: The IP v4 address of the device over WiFi
          example: "0.0.0.0"
        eth0:
          type: string
          description: Device's IP address when it's connected to ethernet
          example: "192.168.167.73"
        eth2:
          type: string
          description: Device's IP address when it's connected to ethernet
          example: "192.168.167.74"
        eth_dhcp:
          type: string
          description: |-
            Flag for DHCP or Static IP Address 0: Static IP 1: IP
            Address provided by LAN/WLAN DHCP Server
          example: "1"
        eth_static_ip:
          type: string
          description: Device's Static IP address (If eth_dhcp=0)
          example: "192.168.167.74"
        eth_static_mask:
          type: string
          description: Device's Network Mask (If eth_dhcp=0)
          example: "255.255.255.0"
        eth_static_gateway:
          type: string
          description: Device's IP Gateway (If eth_dhcp=0)
          example: "192.168.167.1"
        eth_static_dns1:
          type: string
          description: Device's Primary DNS Server (If eth_dhcp=0)
          example: "194.168.4.100"
        eth_static_dns2:
          type: string
          description: Device's Secondary DNS Server (If eth_dhcp=0)
          example: "194.168.8.100"
        hardware:
          type: string
          description: Hardware model
          example: "AmlogicA113"
        VersionUpdate:
          type: string
          description: |-
            Flag that determines, if there is a new firmware version
            available or not. 0: no new firmware 1: new firmware
            available
          example: "0"
        NewVer:
          type: string
          description: |-
            If there is a new firmware available (in case of
            VersionUpdate is set to 1), this is the new version number
          example: "0"
        mcu_ver:
          type: string
          description: Version of MCU on base board
          example: "0"
        mcu_ver_new:
          type: string
          description: |-
            New version of MCU on base board, indicates if there is a
            newer version of MCU available 0 - No new version others -
            New version
          example: "0"
        hdmi_ver:
          type: string
          description: HDMI version
          example: "41"
        hdmi_ver_new:
          type: string
          description: New HDMI version
          example: ""
        update_check_count:
          type: string
          example: "32"
        BleRemote_update_checked_counter:
          type: string
          example: "0"
        ra0:
          type: string
          description: "WiFi AP IP address, normally it is 10.10.10.254"
          example: "10.10.10.254"
        temp_uuid:
          type: string
          description: Temporary UUID (will change after device reboot)
          example: "FF31F09E1A5020113B0A3918"
        cap1:
          type: string
          description: "Bit mask for the module feature, used internally"
          example: "0x40000400"
        capability:
          type: string
          description: "Bit mask for the module feature, used internally"
          example: "0x20084808"
        languages:
          type: string
          description: "Supported languages, bit mask"
          example: "0x11ec"
        prompt_status:
          type: string
          description: |-
            Indicates if the prompting voice would be played or not,
            you can set with command PromptEnable and PromptDisable. 0
            - No prompting voice 1 - Have prompting voice
          example: "1"
        iot_ver:
          type: string
          description: "IOT library version, not used"
          example: "1.0.0"
        alexa_ver:
          type: string
          example: "20180604"
        alexa_beta_enable:
          type: string
          example: "0"
        alexa_force_beta_cfg:
          type: string
          example: "0"
        dsp_ver:
          type: string
          description: "Version for voice processing, not used"
          example: ""
        dsp_ver_new:
          type: string
          description: "New version for voice processing, not used"
          example: ""
        ModuleColorNumber:
          type: string
          description: Reserved
          example: "3"
        ModuleColorString:
          type: string
          description: Reserved
          example: ""
        uboot_verinfo:
          type: string
          description: Uboot version
          example: "231211.095208"
        streams_all:
          type: string
          description: Reserved
          example: "0x7bff7ffe"
        streams:
          type: string
          description: |-
            This is a bit mask: 0: If Airplay is enabled 1: If DLNA is
            enabled 2: Has TTPod support 3: Has TuneIn support 4: Has
            Pandora support 5: Has DoubanFM support
          example: "0x7b9831fe"
        region:
          type: string
          description: Reserved
          example: "unknown"
        volume_control:
          type: string
          example: "0"
        external:
          type: string
          description: Reserved (hex value)
          example: "0x0"
        preset_key:
          type: string
          description: Amount of preset keys available
          example: "12"
        spotify_active:
          type: string
          description: |-
            Spotify status 0: Spotify is not playing 1: Spotify is
            playing
          example: "0"
        plm_support:
          type: string
          description: |-
            This is a bit mask, each bit stands for an external input
            source: bit1: LineIn (Aux support) bit2: Bluetooth support
            bit3: USB support bit4: Optical support bit6: Coaxial
            support bit8: LineIn 2 support bit15: USBDAC support
            Others are reserved or not used.
          example: "0x6"
        mqtt_support:
          type: string
          description: Reserved
          example: "1"
        lbc_support:
          type: string
          description: Reserved
          example: "0"
        WifiChannel:
          type: string
          description: The current connected WiFi channel
          example: "11"
        RSSI:
          type: string
          description: |-
            RSSI Level of used WiFi Value ranges from 0 - 100. 100
            means best signal strength.
          example: "0"
        BSSID:
          type: string
          description: |-
            The Basic Service Set Identifiers:  In most cases this
            will be the MAC Address of the Wireless Acces Point Used
            (e.g. Router)
          example: ""
        wlanSnr:
          type: string
          description: Signal to Noise Ratio of the WiFi connection
          example: "0"
        wlanNoise:
          type: string
          description: Noise level of the WiFi connection
          example: "0"
        wlanFreq:
          type: string
          example: "0"
        wlanDataRate:
          type: string
          example: "0"
        battery:
          type: string
          description: |-
            Battery status 0: battery is not charging 1: battery is
            charging
          example: "0"
        battery_percent:
          type: string
          description: Battery charge level Value ranges from 0 - 100
          example: "0"
        securemode:
          type: string
          description: Reserved
          example: "1"
        auth:
          type: string
          description: Type of WiFi Protected Access used (Authentication Key).
          example: "WPA2PSK"
        encry:
          type: string
          description: Type of encryption used for the WiFi connection.
          example: "AES"
        ota_interface_ver:
          type: string
          example: "2.0"
        ota_api_ver:
          type: string
          example: "3.0"
        upnp_version:
          type: string
          description: UPnP Device Architecture Version
          example: "1005"
        upnp_uuid:
          type: string
          description: UPnP UUID
          example: "uuid:FF31F09E-1A50-2011-3B0A-3918FF31F09E"
        uart_pass_port:
          type: string
          description: Port used for TCP/IP Communcations/Socket Connections
          example: "8899"
        communication_port:
          type: string
          description: TCP port for internal messages
          example: "8819"
        web_firmware_update_hide:
          type: string
          example: "0"
        ignore_talkstart:
          type: string
          example: "0"
        silence_ota_flag:
          type: string
          example: "0"
        silenceOTATime:
          type: string
          example: ""
        ignore_silenceOTATime:
          type: string
          example: "1"
        new_tunein_preset_and_alarm:
          type: string
          example: "1"
        iheartradio_new:
          type: string
          example: "1"
        new_iheart_podcast:
          type: string
          example: "1"
        tidal_version:
          type: string
          description: TIDAL API version
          example: "2.0"
        service_version:
          type: string
          example: "1.0"
        EQ_support:
          type: string
          example: "Eq4p_ver_2.0"
        EQVersion:
          type: string
          example: "4.3"
        HiFiSRC_version:
          type: string
          example: "1.1"
        audio_channel_config:
          type: string
          example: "1"
        app_timezone_id:
          type: string
          description: Timezone ID
          example: "America/New_York"
        avs_timezone_id:
          type: string
          description: Timezone ID for Alexa
          example: "America/New_York"
        tz_info_ver:
          type: string
          example: "1.0"
        max_volume:
          type: string
          description: Maximum volume level (normally 100)
          example: "100"
        power_mode:
          type: string
          example: "-1"
        security:
          type: string
          description: HTTPS API version
          example: "https\/2.0"
        security_version:
          type: string
          description: HTTPS API security version
          example: "3.0"
        security_capabilities:
          type: object
          description: HTTPS API security capabilities
          example: { "ver": "1.0", "aes_ver": "1.0" }
        public_https_version:
          type: string
          description: HTTPS API public version
          example: "1.0"
        BleRemoteControl:
          type: string
          example: "1"
        BleRemoteConnected:
          type: string
          example: "0"
        BleRemoteException:
          type: string
          example: "0"
        udisk:
          type: string
          description: "USB disk status 0: no USB disk 1: USB disk is connected"
          example: "0"
        umount:
          type: string
          description: Reserved
          example: "0"
        autoSenseVersion:
          type: string
          example: "1.0"
        set_play_mode_enable:
          type: string
          example: "0"
        set_play_mode_gain:
          type: string
          example: "0"
        audioOutputModeVer:
          type: string
          example: "1.0"
        privacy_mode:
          type: string
          example: "0"
        DeviceName:
          type: string
          description: The device UPnP and Airplay friendly name
          example: "WiiM Mini-8FA2"
        GroupName:
          type: string
          description: The group name of the device that it belongs to
          example: "WiiM Mini-8FA2"
    PlayerStatus: # Can be referenced as "#/components/schemas/PlayerStatus"
      type: object
      properties:
        type:
          type: string
          description: |-
            0: Main or standalone device 
            1: Device is a Multiroom Guest
          example: "0"
        ch:
          type: string
          description: "Active channel(s) 0: Stereo 1: Left 2: Right"
          example: "0"
        mode:
          type: string
          description: |-
            0: None 
            1: AirPlay or AirPlay 2 
            2: DLNA streaming 
            10: Playing network content, e.g. vTuner, Home Media Share, Amazon Music, Deezer, etc 
            11: playing UDISK (Local USB disk on device) 16: TF card playlist 20: playback start by HTTPAPI 
            31: Spotify Connect 
            32: TIDAL Connect 
            40: AUX-In/Line-In input mode 
            41: Bluetooth input mode 
            42: External storage 
            43: Optical-In input mode 
            47: Line-In #2 input mode 
            50: Mirror 
            51: USBDAC input mode 
            60: Voice mail
            99: The Device is a Guest in a Multiroom Zone
          example: "10"
        loop:
          type: string
          description: |-
            Is a Combination of SHUFFLE and REPEAT modes 0: SHUFFLE:
            disabled REPEAT: enabled - loop 1: SHUFFLE: disabled
            REPEAT: enabled - loop once 2: SHUFFLE: enabled REPEAT:
            enabled - loop 3: SHUFFLE: enabled REPEAT: disabled 4:
            SHUFFLE: disabled REPEAT: disabled 5: SHUFFLE: enabled
            REPEAT: enabled - loop once
          example: "-1"
        eq:
          type: string
          description: The preset number of the Equalizer
          example: "0"
        vendor:
          type: string
          description: Name of the stream source
          example: "vTuner"
        status:
          type: string
          description: |-
            Playback status stop: no audio selected play: playing
            audio load/loading: loading/buffering audio pause: audio
            paused
          enum:
            - play
            - pause
            - stop
            - buffering
          example: "play"
        curpos:
          type: string
          description: "Current position, in ms"
          example: "63634"
        offset_pts:
          type: string
          description: "Offset position, in ms"
          example: "63634"
        totlen:
          type: string
          description: Track duration in ms. Zero when playing a live stream.
          example: "0"
        Title:
          type: string
          description: hexed string of the track title
          example: "4D6F726E696E67204C69676874"
        Artist:
          type: string
          description: hexed string of the artist
          example: "4F77656E20526965676C696E67"
        Album:
          type: string
          description: hexed string of the album
          example: "4D6F726E696E67204C69676874"
        alarmflag:
          type: string
          example: "0"
        plicount:
          type: string
          description: The total number of tracks in the playlist
          example: "5"
        plicurr:
          type: string
          description: Current track index
          example: "2"
        vol:
          type: string
          description: |-
            Current volume Value range is from 0 - 100. So can be
            considered a linear percentage (0% to 100%) of the volume.
          example: "25"
        mute:
          type: string
          description: "Current mute state 0: Not muted 1: Muted"
          example: "0"
    TrackMetadata: # Can be referenced as "#/components/schemas/TrackMetadata"
      type: object
      properties:
        metaData:
          type: object
          properties:
            album:
              type: string
              description: Album name
              example: Country Heat
            title:
              type: string
              description: Track title
              example: Old Dirt Roads
            subtitle:
              type: string
              description: Subtitle
              example: ""
            artist:
              type: string
              description: Artist name
              example: Owen Riegling
            albumArtURI:
              type: string
              description: URL to the album art
              example: "https://m.media-amazon.com/images/I/51iU0odzJwL.jpg"
            sampleRate:
              type: string
              description: Sample rate in Hz
              example: "44100"
            bitDepth:
              type: string
              description: Bit depth in bits
              example: "16"
            bitRate:
              type: string
              description: Bit rate in kbps
              example: "63"
            trackId:
              type: string
              description: Track ID
              example: s6707
    PresetList: # Can be referenced as "#/components/schemas/PresetList"
      type: object
      properties:
        preset_num:
          type: integer
          description: Total number of presets
          example: 3
        preset_list:
          type: array
          items:
            type: object
            properties:
              number:
                type: integer
                description: Preset index (Start from 1)
                example: 1
              name:
                type: string
                description: Playlist name
                example: BBC Radio Norfolk
              url:
                type: string
                description: Play url
                example: >-
                  http://as-hls-wwlive.akamaized.net/pool_904/live/ww/bbc_radio_norfolk/bbc_radio_norfolk.isml/bbc_radio_norfolk-audio%3d96000.norewind.m3u8
              source:
                type: string
                description: Music source
                example: Linkplay Radio
              picurl:
                type: string
                description: Cover picture url
                example: >-
                  http://cdnprofiles.tunein.com/s6852/images/logoq.jpg?t=638353933090000000
    StaticIpInfo: # Can be referenced as "#/components/schemas/StaticIpInfo"
      type: object
      properties:
        wlanStaticIp:
          type: string
          description: Wifi IP address of the device
        wlanGateWay:
          type: string
          description: Wifi IP address of the gateway
        wlanDnsServer:
          type: string
          description: Wifi IP address of the DNS server
        wlanStaticIpEnable:
          type: integer
          description: |-
            Status of the WiFi static IP configuration
            0: Disabled
            1: Enabled
        ethStaticIp:
          type: string
          description: Wired IP address of the device
        ethGateWay:
          type: string
          description: Wired IP address of the gateway
        ethDnsServer:
          type: string
          description: Wired IP address of the DNS server
        ethStaticIpEnable:
          type: integer
          description: |-
            Status of the wired static IP configuration
            0: Disabled
            1: Enabled
    BluetoothDeviceList: # Can be referenced as "#/components/schemas/BluetoothDeviceList"
      type: object
      properties:
        num:
          type: integer
          description: Number of devices found
          example: 1
        scan_status:
          type: integer
          description: |-
            BT scan step
            0: Not started
            1: Initializing
            2: ??? (never seen it)
            3: Scanning
            4: Finished scanning
          example: 4
        list:
          type: array
          description: List of devices found
          items:
            type: object
            properties:
              name:
                type: string
                description: Device name
                example: "My Device"
              ad:
                type: string
                description: MAC address
                example: "00:11:22:33:44:55"
              ct:
                type: integer
                description: Connection type
                example: 0
              role:
                type: string
                description: Role
                example: "Audio Source"

  #-------------------------------
  # Reusable operation parameters
  #-------------------------------
  parameters:
    BT_MAC_ADDRESS: # Can be referenced as "#/components/parameters/BT_MAC_ADDRESS"
      name: BT_MAC_ADDRESS
      description: The Bluetooth MAC address of the device you want to connect to or disconnect from
      in: path
      required: true
      schema:
        type: string
        example: "9c:2a:be:2e:ce:f1"

  #-------------------------------
  # Reusable responses
  #-------------------------------
  responses:
    StringOK: # Can be referenced as "#/components/responses/StringOK"
      description: Successful response
      content:
        text/html:
          schema:
            type: string
            example: OK

