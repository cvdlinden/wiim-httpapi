{
  "openapi": "3.0.0",
  "info": {
    "title": "Linkplay/WiiM/Arylic HTTP API",
    "description": "HTTP API for Linkplay/WiiM devices.\n\nYou can send 'HTTPs Get' request to the device, most of the response is in the JSON format.\n\nRequest format is https://x.x.x.x/httpapi.asp?command=********\nx.x.x.x is the IP address of the device (Below, we assume the IP of the device is 10.10.10.254) ******* is the actual command.\n\nCommands can contain both integers and strings, denoted as '%d' for integers and '%s' for strings, respectively.\n\nThis Swagger doc uses a reverse proxy to access the device. See the description for the actual command.",
    "version": "1.2.0",
    "contact": {}
  },
  "servers": [
    {
      "url": "http://localhost:3000/proxy",
      "description": "Reverse proxy to access the device. See the README for more information."
    }
  ],
  "tags": [
    {
      "name": "Device information",
      "description": "Get the device information"
    },
    {
      "name": "Network",
      "description": "Get the network status"
    },
    {
      "name": "Playback control",
      "description": "Get and set playback controls"
    },
    {
      "name": "EQ",
      "description": "Get and set equalizer settings"
    },
    {
      "name": "Device control",
      "description": "Control the device"
    },
    {
      "name": "Alarm clock",
      "description": "Get and set alarm clock"
    },
    {
      "name": "Source Input Switch",
      "description": "Switch between inputs"
    },
    {
      "name": "Presets",
      "description": "Manage presets\n\nThe WiiM Home App allows users to configure 12 presets for quick access to preferred radio\nstations, playlists, mixes, albums, or artists. Each preset is accessible through its assigned\nnumber.\n"
    },
    {
      "name": "Track Metadata",
      "description": "Get Current Track Metadata"
    },
    {
      "name": "Audio Output Control",
      "description": "Get and set audio output mode"
    },
    {
      "name": "Bluetooth",
      "description": "Get and set Bluetooth settings"
    }
  ],
  "paths": {
    "/getStatusEx": {
      "get": {
        "tags": [
          "Device information"
        ],
        "summary": "Get device information",
        "description": "Makes a call to https://10.10.10.254/httpapi.asp?command=getStatusEx\n\nRetrieves detailed informations about a connected device.\nThe documented output may or may not be complete or differ from what the device actually reports.",
        "externalDocs": {
          "description": "HTTP API for WiiM PRODUCTS Version 1.2",
          "url": "https://www.wiimhome.com/pdf/HTTP%20API%20for%20WiiM%20Products.pdf"
        },
        "operationId": "getStatusEx",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "text/html": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "language": {
                      "type": "string",
                      "description": "The device language"
                    },
                    "ssid": {
                      "type": "string",
                      "description": "Name of the device. Device's own SSID when in WiFi pairing mode or when device's WiFi hotspot is active"
                    },
                    "hideSSID": {
                      "type": "string",
                      "description": "When the device is operating as a WiFi hotspot, this flag determines whether its SSID should be hidden or visible 0: ssid is visible 1: ssid is hidden"
                    },
                    "SSIDStrategy": {
                      "type": "string"
                    },
                    "branch": {
                      "type": "string",
                      "description": "Code branch"
                    },
                    "firmware": {
                      "type": "string",
                      "description": "Current firmware version"
                    },
                    "build": {
                      "type": "string",
                      "description": "Possible values: release, debug, backup release: this is a release version debug: this is a debug version backup: this is a backup version"
                    },
                    "project": {
                      "type": "string",
                      "description": "The project name"
                    },
                    "priv_prj": {
                      "type": "string",
                      "description": "Project name which would stand for a specific board"
                    },
                    "project_build_name": {
                      "type": "string",
                      "description": "Code identifier for customized release"
                    },
                    "Release": {
                      "type": "string",
                      "description": "Firmware build date Format: YYYYMMDD"
                    },
                    "FW_Release_version": {
                      "type": "string",
                      "description": "Reserved"
                    },
                    "PCB_version": {
                      "type": "string",
                      "description": "PCB version/revision"
                    },
                    "cast_enable": {
                      "type": "integer",
                      "description": "Flag for casting feature 0: casting is disabled 1: casting is enabled"
                    },
                    "cast_usage_report": {
                      "type": "integer",
                      "description": "Reserved"
                    },
                    "group": {
                      "type": "string",
                      "description": "0 means it's a master speaker or standalone,  1 means a slave speaker in group"
                    },
                    "master_uuid": {
                      "type": "string",
                      "description": "Exist when working in slave mode, showing the UUID of master device."
                    },
                    "slave_mask": {
                      "type": "string",
                      "description": "Exist when working in slave mode, showing if the device support mask feature. 0 means not supported."
                    },
                    "wmrm_version": {
                      "type": "string",
                      "description": "LinkPlay's MRM SDK version, Multiroom library version, version 4.2 or above won't work with any version below 4.2"
                    },
                    "wmrm_sub_ver": {
                      "type": "string",
                      "description": "Multiroom library sub version"
                    },
                    "expired": {
                      "type": "string",
                      "description": "Reserved"
                    },
                    "internet": {
                      "type": "string",
                      "description": "Current status of internet access: 0: not ready 1: ready"
                    },
                    "uuid": {
                      "type": "string",
                      "description": "The unique ID of the device (will remain after device reboot)"
                    },
                    "MAC": {
                      "type": "string",
                      "description": "MAC address of the device when working in hotspot mode, will show on APP and also the sticker on module/device."
                    },
                    "STA_MAC": {
                      "type": "string",
                      "description": "MAC address of the device when working in station mode"
                    },
                    "BT_MAC": {
                      "type": "string",
                      "description": "The BT MAC address of the device"
                    },
                    "AP_MAC": {
                      "type": "string",
                      "description": "The MAC address of the AP that the device is connected to"
                    },
                    "ETH_MAC": {
                      "type": "string",
                      "description": "The MAC address of the device when it's connected to ethernet"
                    },
                    "InitialConfiguration": {
                      "type": "string",
                      "description": "Flag for initial configuration 0: not configured 1: configured"
                    },
                    "temperature_power_control": {
                      "type": "string",
                      "description": "Reserved"
                    },
                    "temperature_cpu": {
                      "type": "string",
                      "description": "Reserved"
                    },
                    "temperature_tmp102": {
                      "type": "string",
                      "description": "Reserved"
                    },
                    "CountryCode": {
                      "type": "string",
                      "description": "The country code"
                    },
                    "CountryRegion": {
                      "type": "string",
                      "description": "The country region"
                    },
                    "date": {
                      "type": "string",
                      "description": "Current Date"
                    },
                    "time": {
                      "type": "string",
                      "description": "Current local time"
                    },
                    "tz": {
                      "type": "string",
                      "description": "Timezone offset"
                    },
                    "dst_enable": {
                      "type": "string",
                      "description": "Daylight saving time enable"
                    },
                    "netstat": {
                      "type": "string",
                      "description": "Current WiFi status: 0: no network 1: connected to the internet 2: connected to the local network"
                    },
                    "essid": {
                      "type": "string",
                      "description": "SSID of the WiFi the device is connected to in HEX format"
                    },
                    "apcli0": {
                      "type": "string",
                      "description": "The IP v4 address of the device over WiFi"
                    },
                    "eth0": {
                      "type": "string",
                      "description": "Device's IP address when it's connected to ethernet"
                    },
                    "eth2": {
                      "type": "string",
                      "description": "Device's IP address when it's connected to ethernet"
                    },
                    "eth_dhcp": {
                      "type": "string",
                      "description": "Flag for DHCP or Static IP Address 0: Static IP 1: IP Address provided by LAN/WLAN DHCP Server"
                    },
                    "eth_static_ip": {
                      "type": "string",
                      "description": "Device's Static IP address (If eth_dhcp=0)"
                    },
                    "eth_static_mask": {
                      "type": "string",
                      "description": "Device's Network Mask (If eth_dhcp=0)"
                    },
                    "eth_static_gateway": {
                      "type": "string",
                      "description": "Device's IP Gateway (If eth_dhcp=0)"
                    },
                    "eth_static_dns1": {
                      "type": "string",
                      "description": "Device's Primary DNS Server (If eth_dhcp=0)"
                    },
                    "eth_static_dns2": {
                      "type": "string",
                      "description": "Device's Secondary DNS Server (If eth_dhcp=0)"
                    },
                    "hardware": {
                      "type": "string",
                      "description": "Hardware model"
                    },
                    "VersionUpdate": {
                      "type": "string",
                      "description": "Flag that determines, if there is a new firmware version available or not. 0: no new firmware 1: new firmware available"
                    },
                    "NewVer": {
                      "type": "string",
                      "description": "If there is a new firmware available (in case of VersionUpdate is set to 1), this is the new version number"
                    },
                    "mcu_ver": {
                      "type": "string",
                      "description": "Version of MCU on base board"
                    },
                    "mcu_ver_new": {
                      "type": "string",
                      "description": "New version of MCU on base board, indicates if there is a newer version of MCU available 0 - No new version others - New version"
                    },
                    "hdmi_ver": {
                      "type": "string",
                      "description": "HDMI version"
                    },
                    "hdmi_ver_new": {
                      "type": "string",
                      "description": "New HDMI version"
                    },
                    "update_check_count": {
                      "type": "string"
                    },
                    "BleRemote_update_checked_counter": {
                      "type": "string"
                    },
                    "ra0": {
                      "type": "string",
                      "description": "WiFi AP IP address, normally it is 10.10.10.254"
                    },
                    "temp_uuid": {
                      "type": "string",
                      "description": "Temporary UUID (will change after device reboot)"
                    },
                    "cap1": {
                      "type": "string",
                      "description": "Bit mask for the module feature, used internally"
                    },
                    "capability": {
                      "type": "string",
                      "description": "Bit mask for the module feature, used internally"
                    },
                    "languages": {
                      "type": "string",
                      "description": "Supported languages, bit mask"
                    },
                    "prompt_status": {
                      "type": "string",
                      "description": "Indicates if the prompting voice would be played or not, you can set with command PromptEnable and PromptDisable. 0 - No prompting voice 1 - Have prompting voice"
                    },
                    "iot_ver": {
                      "type": "string",
                      "description": "IOT library version, not used"
                    },
                    "alexa_ver": {
                      "type": "string"
                    },
                    "alexa_beta_enable": {
                      "type": "string"
                    },
                    "alexa_force_beta_cfg": {
                      "type": "string"
                    },
                    "dsp_ver": {
                      "type": "string",
                      "description": "Version for voice processing, not used"
                    },
                    "dsp_ver_new": {
                      "type": "string",
                      "description": "New version for voice processing, not used"
                    },
                    "ModuleColorNumber": {
                      "type": "string",
                      "description": "Reserved"
                    },
                    "ModuleColorString": {
                      "type": "string",
                      "description": "Reserved"
                    },
                    "uboot_verinfo": {
                      "type": "string",
                      "description": "Uboot version"
                    },
                    "streams_all": {
                      "type": "string",
                      "description": "Reserved"
                    },
                    "streams": {
                      "type": "string",
                      "description": "This is a bit mask: 0: If Airplay is enabled 1: If DLNA is enabled 2: Has TTPod support 3: Has TuneIn support 4: Has Pandora support 5: Has DoubanFM support"
                    },
                    "region": {
                      "type": "string",
                      "description": "Reserved"
                    },
                    "volume_control": {
                      "type": "string"
                    },
                    "external": {
                      "type": "string",
                      "description": "Reserved (hex value)"
                    },
                    "preset_key": {
                      "type": "string",
                      "description": "Amount of preset keys available"
                    },
                    "spotify_active": {
                      "type": "string",
                      "description": "Spotify status 0: Spotify is not playing 1: Spotify is playing"
                    },
                    "plm_support": {
                      "type": "string",
                      "description": "This is a bit mask, each bit stands for an external input source: bit1: LineIn (Aux support) bit2: Bluetooth support bit3: USB support bit4: Optical support bit6: Coaxial support bit8: LineIn 2 support bit15: USBDAC support Others are reserved or not used."
                    },
                    "mqtt_support": {
                      "type": "string",
                      "description": "Reserved"
                    },
                    "lbc_support": {
                      "type": "string",
                      "description": "Reserved"
                    },
                    "WifiChannel": {
                      "type": "string",
                      "description": "The current connected WiFi channel"
                    },
                    "RSSI": {
                      "type": "string",
                      "description": "RSSI Level of used WiFi Value ranges from 0 - 100. 100 means best signal strength."
                    },
                    "BSSID": {
                      "type": "string",
                      "description": "The Basic Service Set Identifiers:  In most cases this will be the MAC Address of the Wireless Acces Point Used (e.g. Router)"
                    },
                    "wlanSnr": {
                      "type": "string",
                      "description": "Signal to Noise Ratio of the WiFi connection"
                    },
                    "wlanNoise": {
                      "type": "string",
                      "description": "Noise level of the WiFi connection"
                    },
                    "wlanFreq": {
                      "type": "string"
                    },
                    "wlanDataRate": {
                      "type": "string"
                    },
                    "battery": {
                      "type": "string",
                      "description": "Battery status 0: battery is not charging 1: battery is charging"
                    },
                    "battery_percent": {
                      "type": "string",
                      "description": "Battery charge level Value ranges from 0 - 100"
                    },
                    "securemode": {
                      "type": "string",
                      "description": "Reserved"
                    },
                    "auth": {
                      "type": "string",
                      "description": "Type of WiFi Protected Access used (Authentication Key)."
                    },
                    "encry": {
                      "type": "string",
                      "description": "Type of encryption used for the WiFi connection."
                    },
                    "ota_interface_ver": {
                      "type": "string"
                    },
                    "ota_api_ver": {
                      "type": "string"
                    },
                    "upnp_version": {
                      "type": "string",
                      "description": "UPnP Device Architecture Version"
                    },
                    "upnp_uuid": {
                      "type": "string",
                      "description": "UPnP UUID"
                    },
                    "uart_pass_port": {
                      "type": "string",
                      "description": "Port used for TCP/IP Communcations/Socket Connections"
                    },
                    "communication_port": {
                      "type": "string",
                      "description": "TCP port for internal messages"
                    },
                    "web_firmware_update_hide": {
                      "type": "string"
                    },
                    "ignore_talkstart": {
                      "type": "string"
                    },
                    "silence_ota_flag": {
                      "type": "string"
                    },
                    "silenceOTATime": {
                      "type": "string"
                    },
                    "ignore_silenceOTATime": {
                      "type": "string"
                    },
                    "new_tunein_preset_and_alarm": {
                      "type": "string"
                    },
                    "iheartradio_new": {
                      "type": "string"
                    },
                    "new_iheart_podcast": {
                      "type": "string"
                    },
                    "tidal_version": {
                      "type": "string",
                      "description": "TIDAL API version"
                    },
                    "service_version": {
                      "type": "string"
                    },
                    "EQ_support": {
                      "type": "string"
                    },
                    "EQVersion": {
                      "type": "string"
                    },
                    "HiFiSRC_version": {
                      "type": "string"
                    },
                    "audio_channel_config": {
                      "type": "string"
                    },
                    "app_timezone_id": {
                      "type": "string",
                      "description": "Timezone ID"
                    },
                    "avs_timezone_id": {
                      "type": "string",
                      "description": "Timezone ID for Alexa"
                    },
                    "tz_info_ver": {
                      "type": "string"
                    },
                    "max_volume": {
                      "type": "string",
                      "description": "Maximum volume level (normally 100)"
                    },
                    "power_mode": {
                      "type": "string"
                    },
                    "security": {
                      "type": "string",
                      "description": "HTTPS API version"
                    },
                    "security_version": {
                      "type": "string",
                      "description": "HTTPS API security version"
                    },
                    "security_capabilities": {
                      "type": "object",
                      "description": "HTTPS API security capabilities"
                    },
                    "public_https_version": {
                      "type": "string",
                      "description": "HTTPS API public version"
                    },
                    "BleRemoteControl": {
                      "type": "string"
                    },
                    "BleRemoteConnected": {
                      "type": "string"
                    },
                    "BleRemoteException": {
                      "type": "string"
                    },
                    "udisk": {
                      "type": "string",
                      "description": "USB disk status 0: no USB disk 1: USB disk is connected"
                    },
                    "umount": {
                      "type": "string",
                      "description": "Reserved"
                    },
                    "autoSenseVersion": {
                      "type": "string"
                    },
                    "set_play_mode_enable": {
                      "type": "string"
                    },
                    "set_play_mode_gain": {
                      "type": "string"
                    },
                    "audioOutputModeVer": {
                      "type": "string"
                    },
                    "privacy_mode": {
                      "type": "string"
                    },
                    "DeviceName": {
                      "type": "string",
                      "description": "The device UPnP and Airplay friendly name"
                    },
                    "GroupName": {
                      "type": "string",
                      "description": "The group name of the device that it belongs to"
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": []
      }
    },
    "/getStaticIpInfo": {
      "get": {
        "tags": [
          "Network"
        ],
        "summary": "Get the static IP information",
        "description": "Makes a call to https://10.10.10.254/httpapi.asp?command=getStaticIpInfo\nIf the WiiM device is configured to use DHCP, the above string values will be empty (see the ethernet related keys).",
        "externalDocs": {
          "description": "WiiM Extended HTTP API by DanBrezeanu",
          "url": "https://github.com/DanBrezeanu/wiim-extended-http-api"
        },
        "operationId": "getStaticIpInfo",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "text/html": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "wlanStaticIp": {
                      "type": "string",
                      "description": "Wifi IP address of the device"
                    },
                    "wlanGateWay": {
                      "type": "string",
                      "description": "Wifi IP address of the gateway"
                    },
                    "wlanDnsServer": {
                      "type": "string",
                      "description": "Wifi IP address of the DNS server"
                    },
                    "wlanStaticIpEnable": {
                      "type": "integer",
                      "description": "Status of the WiFi static IP configuration 0: Disabled 1: Enabled"
                    },
                    "ethStaticIp": {
                      "type": "string",
                      "description": "Wired IP address of the device"
                    },
                    "ethGateWay": {
                      "type": "string",
                      "description": "Wired IP address of the gateway"
                    },
                    "ethDnsServer": {
                      "type": "string",
                      "description": "Wired IP address of the DNS server"
                    },
                    "ethStaticIpEnable": {
                      "type": "integer",
                      "description": "Status of the wired static IP configuration 0: Disabled 1: Enabled"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/getStaticIP": {
      "get": {
        "tags": [
          "Network"
        ],
        "deprecated": true,
        "summary": "Query networking status",
        "description": "Query current networking status",
        "externalDocs": {
          "description": "Arylic Developers",
          "url": "https://developer.arylic.com/httpapi/#http-api"
        },
        "operationId": "getStaticIP",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "text/html": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "parameters": []
      }
    },
    "/wlanGetConnectState": {
      "get": {
        "tags": [
          "Network"
        ],
        "summary": "Get the connection status",
        "description": "Makes a call to https://10.10.10.254/httpapi.asp?command=wlanGetConnectState\n\nNote the return result is not in json.\n\nReturn string:\nReturn string Description\nPROCESS In progress\nPAIRFAIL Wrong password\nFAIL Connect fail\nOK connected\n\n",
        "externalDocs": {
          "description": "HTTP API for WiiM PRODUCTS Version 1.2",
          "url": "https://www.wiimhome.com/pdf/HTTP%20API%20for%20WiiM%20Products.pdf"
        },
        "operationId": "wlanGetConnectState",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "text/html": {
                "schema": {
                  "type": "string"
                },
                "examples": {
                  "PROCESS": {
                    "summary": "In progress",
                    "value": "PROCESS"
                  },
                  "PAIRFAIL": {
                    "summary": "Wrong password",
                    "value": "PAIRFAIL"
                  },
                  "FAIL": {
                    "summary": "Connect fail",
                    "value": "FAIL"
                  },
                  "OK": {
                    "summary": "Connected",
                    "value": "OK"
                  }
                }
              }
            }
          }
        },
        "parameters": []
      }
    },
    "/getPlayerStatus": {
      "get": {
        "tags": [
          "Playback control"
        ],
        "summary": "Get the playback status",
        "description": "Makes a call to https://10.10.10.254/httpapi.asp?command=getPlayerStatus",
        "externalDocs": {
          "description": "HTTP API for WiiM PRODUCTS Version 1.2",
          "url": "https://www.wiimhome.com/pdf/HTTP%20API%20for%20WiiM%20Products.pdf"
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "text/html": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "0: Main or standalone device 1: Device is a Multiroom Guest"
                    },
                    "ch": {
                      "type": "string",
                      "description": "Active channel(s) 0: Stereo 1: Left 2: Right"
                    },
                    "mode": {
                      "type": "string",
                      "description": "0: None 1: AirPlay or AirPlay 2 2: DLNA streaming 10: Playing network content, e.g. vTuner, Home Media Share, Amazon Music, Deezer, etc 11: playing UDISK (Local USB disk on device) 16: TF card playlist 20: playback start by HTTPAPI 31: Spotify Connect 32: TIDAL Connect 40: AUX-In/Line-In input mode 41: Bluetooth input mode 42: External storage 43: Optical-In input mode 47: Line-In #2 input mode 50: Mirror 51: USBDAC input mode 60: Voice mail 99: The Device is a Guest in a Multiroom Zone"
                    },
                    "loop": {
                      "type": "string",
                      "description": "Is a Combination of SHUFFLE and REPEAT modes 0: SHUFFLE: disabled REPEAT: enabled - loop 1: SHUFFLE: disabled REPEAT: enabled - loop once 2: SHUFFLE: enabled REPEAT: enabled - loop 3: SHUFFLE: enabled REPEAT: disabled 4: SHUFFLE: disabled REPEAT: disabled 5: SHUFFLE: enabled REPEAT: enabled - loop once"
                    },
                    "eq": {
                      "type": "string",
                      "description": "The preset number of the Equalizer"
                    },
                    "vendor": {
                      "type": "string",
                      "description": "Name of the stream source"
                    },
                    "status": {
                      "type": "string",
                      "description": "Playback status stop: no audio selected play: playing audio load/loading: loading/buffering audio pause: audio paused",
                      "enum": [
                        "PLAYING",
                        "PAUSE",
                        "STOP",
                        "BUFFERING"
                      ]
                    },
                    "curpos": {
                      "type": "string",
                      "description": "Current position, in ms"
                    },
                    "offset_pts": {
                      "type": "string",
                      "description": "Offset position, in ms"
                    },
                    "totlen": {
                      "type": "string",
                      "description": "Track duration in ms. Zero when playing a live stream."
                    },
                    "Title": {
                      "type": "string",
                      "description": "hexed string of the track title"
                    },
                    "Artist": {
                      "type": "string",
                      "description": "hexed string of the artist"
                    },
                    "Album": {
                      "type": "string",
                      "description": "hexed string of the album"
                    },
                    "alarmflag": {
                      "type": "string"
                    },
                    "plicount": {
                      "type": "string",
                      "description": "The total number of tracks in the playlist"
                    },
                    "plicurr": {
                      "type": "string",
                      "description": "Current track index"
                    },
                    "vol": {
                      "type": "string",
                      "description": "Current volume Value range is from 0 - 100. So can be considered a linear percentage (0% to 100%) of the volume."
                    },
                    "mute": {
                      "type": "string",
                      "description": "Current mute state 0: Not muted 1: Muted"
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [],
        "operationId": "getPlayerStatus"
      }
    },
    "/setPlayerCmd:hex_playlist:url:{index}": {
      "get": {
        "summary": "",
        "description": "http://10.10.10.254/httpapi.asp?command=setPlayerCmd:hex_playlist:url:<index>\nPlay the URl (URI is the m3u or ASX playlist link, index is the start index), here, url should be\nhexed (please refer to 1.3)\n",
        "externalDocs": {
          "description": "HTTP API for WiiM PRODUCTS Version 1.2",
          "url": "https://www.wiimhome.com/pdf/HTTP%20API%20for%20WiiM%20Products.pdf"
        },
        "parameters": [
          {
            "name": "index",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Default response"
          }
        },
        "tags": [
          "Playback control"
        ],
        "deprecated": true,
        "operationId": "setPlayerCmdHexPlaylistUrl"
      }
    },
    "/setPlayerCmd:pause": {
      "get": {
        "summary": "Pause",
        "description": "https://10.10.10.254/httpapi.asp?command=setPlayerCmd:pause",
        "externalDocs": {
          "description": "HTTP API for WiiM PRODUCTS Version 1.2",
          "url": "https://www.wiimhome.com/pdf/HTTP%20API%20for%20WiiM%20Products.pdf"
        },
        "parameters": [],
        "responses": {
          "default": {
            "description": "Default response"
          }
        },
        "tags": [
          "Playback control"
        ],
        "operationId": "setPlayerCmdPause"
      }
    },
    "/setPlayerCmd:resume": {
      "get": {
        "summary": "Resume",
        "description": "https://10.10.10.254/httpapi.asp?command=setPlayerCmd:resume",
        "externalDocs": {
          "description": "HTTP API for WiiM PRODUCTS Version 1.2",
          "url": "https://www.wiimhome.com/pdf/HTTP%20API%20for%20WiiM%20Products.pdf"
        },
        "parameters": [],
        "responses": {
          "default": {
            "description": "Default response"
          }
        },
        "tags": [
          "Playback control"
        ],
        "operationId": "setPlayerCmdResume"
      }
    },
    "/setPlayerCmd:onepause": {
      "get": {
        "summary": "Toggle pause/play",
        "description": "https://10.10.10.254/httpapi.asp?command=setPlayerCmd:onepause\nIf the state is paused, resume it; otherwise, pause it.",
        "externalDocs": {
          "description": "HTTP API for WiiM PRODUCTS Version 1.2",
          "url": "https://www.wiimhome.com/pdf/HTTP%20API%20for%20WiiM%20Products.pdf"
        },
        "parameters": [],
        "responses": {
          "default": {
            "description": "Default response"
          }
        },
        "tags": [
          "Playback control"
        ],
        "operationId": "setPlayerCmdOnePause"
      }
    },
    "/setPlayerCmd:prev": {
      "get": {
        "summary": "Previous",
        "description": "https://10.10.10.254/httpapi.asp?command=setPlayerCmd:prev",
        "externalDocs": {
          "description": "HTTP API for WiiM PRODUCTS Version 1.2",
          "url": "https://www.wiimhome.com/pdf/HTTP%20API%20for%20WiiM%20Products.pdf"
        },
        "parameters": [],
        "responses": {
          "default": {
            "description": "Default response"
          }
        },
        "tags": [
          "Playback control"
        ],
        "operationId": "setPlayerCmdPrev"
      }
    },
    "/setPlayerCmd:next": {
      "get": {
        "summary": "Next",
        "description": "https://10.10.10.254/httpapi.asp?command=setPlayerCmd:next",
        "externalDocs": {
          "description": "HTTP API for WiiM PRODUCTS Version 1.2",
          "url": "https://www.wiimhome.com/pdf/HTTP%20API%20for%20WiiM%20Products.pdf"
        },
        "parameters": [],
        "responses": {
          "default": {
            "description": "Default response"
          }
        },
        "tags": [
          "Playback control"
        ],
        "operationId": "setPlayerCmdNext"
      }
    },
    "/setPlayerCmd:seek:position": {
      "get": {
        "summary": "Seek",
        "description": "https://10.10.10.254/httpapi.asp?command=setPlayerCmd:seek:position\nPosition is from 0 to duration in second.",
        "externalDocs": {
          "description": "HTTP API for WiiM PRODUCTS Version 1.2",
          "url": "https://www.wiimhome.com/pdf/HTTP%20API%20for%20WiiM%20Products.pdf"
        },
        "parameters": [],
        "responses": {
          "default": {
            "description": "Default response"
          }
        },
        "tags": [
          "Playback control"
        ],
        "operationId": "setPlayerCmdSeekPosition"
      }
    },
    "/setPlayerCmd:stop": {
      "get": {
        "summary": "Stop",
        "description": "https://10.10.10.254/httpapi.asp?command=setPlayerCmd:stop",
        "externalDocs": {
          "description": "HTTP API for WiiM PRODUCTS Version 1.2",
          "url": "https://www.wiimhome.com/pdf/HTTP%20API%20for%20WiiM%20Products.pdf"
        },
        "parameters": [],
        "responses": {
          "default": {
            "description": "Default response"
          }
        },
        "tags": [
          "Playback control"
        ],
        "operationId": "setPlayerCmdStop"
      }
    },
    "/setPlayerCmd:vol:{value}": {
      "get": {
        "summary": "Set volume",
        "description": "https://10.10.10.254/httpapi.asp?command=setPlayerCmd:vol:value\nValue can be 0 to 100.",
        "externalDocs": {
          "description": "HTTP API for WiiM PRODUCTS Version 1.2",
          "url": "https://www.wiimhome.com/pdf/HTTP%20API%20for%20WiiM%20Products.pdf"
        },
        "parameters": [
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "Value can be 0 to 100."
          }
        ],
        "responses": {
          "default": {
            "description": "Default response"
          }
        },
        "tags": [
          "Playback control"
        ],
        "operationId": "setPlayerCmdVol"
      }
    },
    "/setPlayerCmd:mute:{n}": {
      "get": {
        "summary": "Mute",
        "description": "https://10.10.10.254/httpapi.asp?command=setPlayerCmd:mute:n\nMute: n=1\nUnmute: n=0\nThe slave mute state will be set at the same time when it's in group play.",
        "externalDocs": {
          "description": "HTTP API for WiiM PRODUCTS Version 1.2",
          "url": "https://www.wiimhome.com/pdf/HTTP%20API%20for%20WiiM%20Products.pdf"
        },
        "parameters": [
          {
            "name": "n",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "1",
                "0"
              ],
              "default": "1"
            },
            "description": "Mute: n=1\nUnmute: n=0"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response"
          }
        },
        "tags": [
          "Playback control"
        ],
        "operationId": "setPlayerCmdMute"
      }
    },
    "/setPlayerCmd:loopmode:{n}": {
      "get": {
        "summary": "Loop mode set",
        "description": "https://10.10.10.254/httpapi.asp?command=setPlayerCmd:loopmode:n\n\nn = \n0 - Sequence, no loop\n1 - Single loop\n2 - Shuffle loop\n-1 - Sequence loop\n",
        "externalDocs": {
          "description": "HTTP API for WiiM PRODUCTS Version 1.2",
          "url": "https://www.wiimhome.com/pdf/HTTP%20API%20for%20WiiM%20Products.pdf"
        },
        "parameters": [
          {
            "name": "n",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "0",
                "1",
                "2",
                "-1"
              ]
            },
            "description": "0 Sequence, no loop\n1 Single loop\n2 Shuffle loop\n-1 Sequence loop"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response"
          }
        },
        "tags": [
          "Playback control"
        ],
        "operationId": "setPlayerCmdLoopmode"
      }
    },
    "/getNewAudioOutputHardwareMode": {
      "get": {
        "summary": "Get audio output mode",
        "description": "JSON Response:\n{\"hardware\":\"2\",\"source\":\"0\",\"audiocast\":\"0\"}\n\nDescription:\nField Description\nhardware Hardware Interface output mode:\n1: AUDIO_OUTPUT_SPDIF_MODE\n2: AUDIO_OUTPUT_AUX_MODE\n3: AUDIO_OUTPUT_COAX_MODE\nsource BT source output mode:\n0: disable\n1: active\naudiocast Audio cast output mode:\n0: disable\n1: active",
        "externalDocs": {
          "description": "HTTP API for WiiM PRODUCTS Version 1.2",
          "url": "https://www.wiimhome.com/pdf/HTTP%20API%20for%20WiiM%20Products.pdf"
        },
        "parameters": [],
        "responses": {
          "default": {
            "description": "Default response"
          }
        },
        "tags": [
          "Audio Output Control"
        ],
        "operationId": "getNewAudioOutputHardwareMode"
      }
    },
    "/setAudioOutputHardwareMode:{n}": {
      "get": {
        "summary": "Set audio output mode",
        "description": "Field Description\nHardware Interface output mode:\n1: AUDIO_OUTPUT_SPDIF_MODE\n2: AUDIO_OUTPUT_AUX_MODE\n3: AUDIO_OUTPUT_COAX_MODE\nResponse is 'OK'",
        "externalDocs": {
          "description": "HTTP API for WiiM PRODUCTS Version 1.2",
          "url": "https://www.wiimhome.com/pdf/HTTP%20API%20for%20WiiM%20Products.pdf"
        },
        "parameters": [
          {
            "name": "n",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "1",
                "2",
                "3"
              ]
            },
            "description": "Hardware Interface output mode:\n1: AUDIO_OUTPUT_SPDIF_MODE\n2: AUDIO_OUTPUT_AUX_MODE\n3: AUDIO_OUTPUT_COAX_MODE"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response"
          }
        },
        "tags": [
          "Audio Output Control"
        ],
        "operationId": "setAudioOutputHardwareMode"
      }
    },
    "/getMetaInfo": {
      "get": {
        "summary": "Get Current Track Metadata",
        "description": "JSON Response\n{\n \"metaData\": {\n \"album\": \"Country Heat\",\n \"title\": \"Old Dirt Roads\",\n \"artist\": \"Owen Riegling\",\n \"albumArtURI \": \"https://m.media-amazon.com/images/I/51iU0odzJwL.jpg\",\n \"sampleRate \": \"44100\",\n \"bitDepth\": \"16\"\n }\n}",
        "externalDocs": {
          "description": "HTTP API for WiiM PRODUCTS Version 1.2",
          "url": "https://www.wiimhome.com/pdf/HTTP%20API%20for%20WiiM%20Products.pdf"
        },
        "parameters": [],
        "responses": {
          "default": {
            "description": "Default response"
          }
        },
        "tags": [
          "Track Metadata"
        ],
        "operationId": "getMetaInfo"
      }
    },
    "/setPlayerCmd:play:{url}": {
      "get": {
        "summary": "Play audio URL",
        "description": "https://10.10.10.254/httpapi.asp?command=setPlayerCmd:play:url\nPlay the URL. URL points to an audio stream address.\nResponse is always 'OK' now",
        "externalDocs": {
          "description": "HTTP API for WiiM PRODUCTS Version 1.2",
          "url": "https://www.wiimhome.com/pdf/HTTP%20API%20for%20WiiM%20Products.pdf"
        },
        "parameters": [
          {
            "name": "url",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "http://as-hls-ww-live.akamaized.net/pool_01505109/live/ww/bbc_radio_one/bbc_radio_one.isml/bbc_radio_one-audio%3d96000.norewind.m3u8"
            },
            "description": "URL points to an audio stream address"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response"
          }
        },
        "tags": [
          "Playback control"
        ],
        "operationId": "setPlayerCmdPlayUrl"
      }
    },
    "/setPlayerCmd:playlist:{url}:{index}": {
      "get": {
        "summary": "Play audio playlist",
        "description": "https://10.10.10.254/httpapi.asp?command=setPlayerCmd:playlist:url:<index>\nPlay the playlist with the URL (URL points to the m3u or ASX playlist link, index is the start\nindex).\nResponse is always 'OK' now.",
        "externalDocs": {
          "description": "HTTP API for WiiM PRODUCTS Version 1.2",
          "url": "https://www.wiimhome.com/pdf/HTTP%20API%20for%20WiiM%20Products.pdf"
        },
        "parameters": [
          {
            "name": "index",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "url",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "https://gist.githubusercontent.com/bpsib/67089b959e4fa898af69fea59ad74bc3/raw/685789e28187c0a15da978b51d436a140d5ea207/BBC-Radio-HLS.m3u"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Default response"
          }
        },
        "tags": [
          "Playback control"
        ],
        "operationId": "setPlayerCmdPlaylistUrl"
      }
    },
    "/EQOn": {
      "get": {
        "summary": "Turn on the EQ",
        "description": "https://10.10.10.254/httpapi.asp?command=EQOn\n\nJSON Response:\n{\"status\":\"OK\"} or {\"status\":\"Failed\"}",
        "externalDocs": {
          "description": "HTTP API for WiiM PRODUCTS Version 1.2",
          "url": "https://www.wiimhome.com/pdf/HTTP%20API%20for%20WiiM%20Products.pdf"
        },
        "parameters": [],
        "responses": {
          "200": {
            "description": "Default response",
            "content": {
              "text/html": {
                "schema": {}
              }
            }
          }
        },
        "tags": [
          "EQ"
        ],
        "operationId": "setEQOn"
      }
    },
    "/EQOff": {
      "get": {
        "summary": "Turn off the EQ setting",
        "description": "https://10.10.10.254/httpapi.asp?command=EQOff\n\nJSON Response:\n{\"status\":\"OK\"} or {\"status\":\"Failed\"}\n",
        "externalDocs": {
          "description": "HTTP API for WiiM PRODUCTS Version 1.2",
          "url": "https://www.wiimhome.com/pdf/HTTP%20API%20for%20WiiM%20Products.pdf"
        },
        "parameters": [],
        "responses": {
          "200": {
            "description": "Default response",
            "content": {
              "text/html": {
                "schema": {}
              }
            }
          }
        },
        "tags": [
          "EQ"
        ],
        "operationId": "setEQOff"
      }
    },
    "/EQGetStat": {
      "get": {
        "summary": "Check if the EQ is ON or OFF",
        "description": "http://10.10.10.254/httpapi.asp?command=EQGetStat\n\nJSON Response:\n{\"EQStat\":\"On\"} or {\"EQStat\":\"Off\"}",
        "externalDocs": {
          "description": "HTTP API for WiiM PRODUCTS Version 1.2",
          "url": "https://www.wiimhome.com/pdf/HTTP%20API%20for%20WiiM%20Products.pdf"
        },
        "parameters": [],
        "responses": {
          "222": {
            "description": "Default response",
            "content": {
              "text/html": {
                "schema": {}
              }
            }
          }
        },
        "tags": [
          "EQ"
        ],
        "operationId": "getEQStat"
      }
    },
    "/EQGetList": {
      "get": {
        "summary": "Check all the possible EQ settings",
        "description": "http://10.10.10.254/httpapi.asp?command=EQGetList\n\nResponse:\n[\"Flat\", \"Acoustic\", \"Bass Booster\", \"Bass Reducer\", \"Classical\", \"Dance\", \"Deep\", \"Electronic\",\n\"Hip-Hop\", \"Jazz\", \"Latin\", \"Loudness\", \"Lounge\", \"Piano\", \"Pop\", \"R&B\", \"Rock\", \"Small\nSpeakers\", \"Spoken Word\", \"Treble Booster\", \"Treble Reducer\", \"Vocal Booster\"]\n",
        "externalDocs": {
          "description": "HTTP API for WiiM PRODUCTS Version 1.2",
          "url": "https://www.wiimhome.com/pdf/HTTP%20API%20for%20WiiM%20Products.pdf"
        },
        "parameters": [],
        "responses": {
          "200": {
            "description": "Default response",
            "content": {
              "text/html": {
                "schema": {}
              }
            }
          }
        },
        "tags": [
          "EQ"
        ],
        "operationId": "getEQList"
      }
    },
    "/EQLoad:{name}": {
      "get": {
        "summary": "Set the specific EQ with name",
        "description": "http://10.10.10.254/httpapi.asp?command=EQLoad:xxx\n\nJSON Response:\n{\"status\":\"OK\"} or {\"status\":\"Failed\"}\n\nNote: xxx is the one of the name in the list returned by EQGetList, i.e., EQLoad:Flat",
        "externalDocs": {
          "description": "HTTP API for WiiM PRODUCTS Version 1.2",
          "url": "https://www.wiimhome.com/pdf/HTTP%20API%20for%20WiiM%20Products.pdf"
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "Flat",
                "Acoustic",
                "Bass Booster",
                "Bass Reducer",
                "Classical",
                "Dance",
                "Deep",
                "Electronic",
                "Hip-Hop",
                "Jazz",
                "Latin",
                "Loudness",
                "Lounge",
                "Piano",
                "Pop",
                "R&B",
                "Rock",
                "Small Speakers",
                "Spoken Word",
                "Treble Booster",
                "Treble Reducer",
                "Vocal Booster"
              ]
            },
            "description": "The name in the list returned by EQGetList, i.e., EQLoad:Flat"
          }
        ],
        "operationId": "loadEQByName",
        "responses": {
          "200": {
            "description": "Default response",
            "content": {
              "text/html": {
                "schema": {}
              }
            }
          }
        },
        "tags": [
          "EQ"
        ]
      }
    },
    "/reboot": {
      "get": {
        "summary": "Reboot",
        "description": "http://10.10.10.254/httpapi.asp?command=reboot\n\nJSON Response:\n{\"status\":\"OK\"}",
        "externalDocs": {
          "description": "HTTP API for WiiM PRODUCTS Version 1.2",
          "url": "https://www.wiimhome.com/pdf/HTTP%20API%20for%20WiiM%20Products.pdf"
        },
        "parameters": [],
        "operationId": "rebootDevice",
        "responses": {
          "200": {
            "description": "Default response",
            "content": {
              "text/html": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "OK": {
                    "summary": "Response",
                    "value": {
                      "status": "OK"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Device control"
        ]
      }
    },
    "/setShutdown:{sec}": {
      "get": {
        "summary": "Shutdown",
        "description": "http://10.10.10.254/httpapi.asp?command=setShutdown:sec\n\nShutdown device in sec\n\nsec:\n0: shutdown immediately\n-1: cancel the previous shutdown timer\n\nJSON Response:\n{\"status\":\"OK\"} or {\"status\":\"Failed\"}\n",
        "externalDocs": {
          "description": "HTTP API for WiiM PRODUCTS Version 1.2",
          "url": "https://www.wiimhome.com/pdf/HTTP%20API%20for%20WiiM%20Products.pdf"
        },
        "parameters": [
          {
            "name": "sec",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0"
            },
            "description": "Shutdown device in sec\n\n0: shutdown immediately\n-1: cancel the previous shutdown timer"
          }
        ],
        "operationId": "setShutdownTimer",
        "responses": {
          "200": {
            "description": "Default response",
            "content": {
              "text/html": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "OK": {
                    "summary": "OK",
                    "value": {
                      "status": "OK"
                    }
                  },
                  "FAILED": {
                    "summary": "Failed",
                    "value": {
                      "status": "Failed"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Device control"
        ]
      }
    },
    "/getShutdown": {
      "get": {
        "summary": "Get the shutdown timer",
        "description": "http://10.10.10.254/httpapi.asp?command=getShutdown\n\nReturn the seconds\n",
        "externalDocs": {
          "description": "HTTP API for WiiM PRODUCTS Version 1.2",
          "url": "https://www.wiimhome.com/pdf/HTTP%20API%20for%20WiiM%20Products.pdf"
        },
        "parameters": [],
        "operationId": "getShutdownTimer",
        "responses": {
          "200": {
            "description": "Default response",
            "content": {
              "text/html": {
                "schema": {
                  "type": "integer"
                },
                "examples": {
                  "OK": {
                    "summary": "Number of seconds",
                    "value": 0
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Device control"
        ]
      }
    },
    "/timeSync:{YYYYMMDDHHMMSS}": {
      "get": {
        "summary": "Get network time",
        "description": "If the device has no internet access, you need to sync its time with:\n\nhttp://10.10.10.254/httpapi.asp?command=timeSync:YYYYMMDDHHMMSS\n\nYYYY is year (such as 2015), MM is month (01~12), DD is day (01~31), HH is hour (00~23),\nMM is minute (00~59), SS is second (00~59)\n\nIn UTC",
        "externalDocs": {
          "description": "HTTP API for WiiM PRODUCTS Version 1.2",
          "url": "https://www.wiimhome.com/pdf/HTTP%20API%20for%20WiiM%20Products.pdf"
        },
        "parameters": [
          {
            "name": "YYYYMMDDHHMMSS",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "setTimeSync",
        "responses": {
          "200": {
            "description": "Default response",
            "content": {
              "text/html": {
                "schema": {}
              }
            }
          }
        },
        "tags": [
          "Alarm clock"
        ]
      }
    },
    "/setAlarmClock:{n}:{trig}:{op}:{time}:{day}:{url}": {
      "get": {
        "summary": "Set Alarm",
        "description": "http://10.10.10.254/httpapi.asp?command=setAlarmClock:n:trig:op:time[:day][:url]\n\nn: 0~2, currently support max 3 alarm\n\ntrig: the alarm trigger:\n0 cancel the alarm, for example: setAlarmClock:n:0\n1 once, day should be YYYYMMDD\n2 every day\n3 every week, day should be 2 bytes (\"00\"~\"06\"), means from Sunday to Saturday.\n4 every week, day should be 2 bytes, the bit 0 to bit 6 means the effect, for example,\n\"7F\" means every day in week, \"01\" means only Sunday\n5 every month, day should be 2 bytes (\"01\"~\"31\")\n\nop: the action\n0 shell execute\n1 playback or ring\n2 stop playback\ntime: should be HHMMSS, in UTC\n\nday:\nif trigger is 0 or 2, no need to set.\nif trigger is 1, should be YYYYMMDD ( %04d%02d%02d)\nif trigger is 3, day should be 2 bytes (\"00\"~\"06\"), means from Sunday to Saturday.\nif trigger is 4, day should be 2 bytes, the bit 0 to bit 6 means the effect, for example,\n\"7F\" means every day in week, \"01\" means only Sunday\nif trigger is 5, day should be 2 bytes (\"01\"~\"31\")\n\nurl: the shell path or playback url, should less than 256 bytes",
        "externalDocs": {
          "description": "HTTP API for WiiM PRODUCTS Version 1.2",
          "url": "https://www.wiimhome.com/pdf/HTTP%20API%20for%20WiiM%20Products.pdf"
        },
        "parameters": [
          {
            "name": "n",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "0",
                "1",
                "2"
              ]
            },
            "description": "The alarm clock number\n\ncurrently support max 3 alarm\n"
          },
          {
            "name": "trig",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "0",
                "1",
                "2",
                "3",
                "4",
                "5"
              ]
            },
            "description": "The alarm trigger\n\n0 cancel the alarm, for example: setAlarmClock:n:0\n1 once, day should be YYYYMMDD\n2 every day\n3 every week, day should be 2 bytes (00\"~\"06\"), means from Sunday to Saturday.\n4 every week, day should be 2 bytes, the bit 0 to bit 6 means the effect, for example,\n\"7F\" means every day in week, \"01\" means only Sunday\n5 every month, day should be 2 bytes (\"01\"~\"31\")\n"
          },
          {
            "name": "op",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "0",
                "1",
                "2"
              ]
            },
            "description": "The action\n\n0 shell execute\n1 playback or ring\n2 stop playback\n"
          },
          {
            "name": "time",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "should be HHMMSS, in UTC"
          },
          {
            "name": "day",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "if trigger is 0 or 2, no need to set.\n\nif trigger is 1, should be YYYYMMDD ( %04d%02d%02d)\n\nif trigger is 3, day should be 2 bytes (\"00\"~\"06\"), means from Sunday to Saturday.\n\nif trigger is 4, day should be 2 bytes, the bit 0 to bit 6 means the effect, for example,\n\"7F\" means every day in week, \"01\" means only Sunday\n\nif trigger is 5, day should be 2 bytes (\"01\"~\"31\")"
          },
          {
            "name": "url",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The shell path or playback url, should less than 256 bytes"
          }
        ],
        "operationId": "setAlarmClock",
        "responses": {
          "200": {
            "description": "Default response",
            "content": {
              "text/html": {
                "schema": {}
              }
            }
          }
        },
        "tags": [
          "Alarm clock"
        ]
      }
    },
    "/getAlarmClock:{n}": {
      "get": {
        "summary": "",
        "description": "http://10.10.10.254/httpapi.asp?command=getAlarmClock:n\n\nn: 0~2, currently support max 3 alarm\n{\"enable\":\"1\",\n\"trigger\":\"%d\",\n\"operation\":\"%d\",\n\"date\"::\"%02d:%02d:%02d\", //if not a \"every day\" alarm, no this\n\"week_day\":\"%d\", //if not a \"every week\" alarm, no this\n\"day\":\"%02d\", //if not a \"every month\" alarm, no this\n\"time\":\"%02d:02d:%02d\",\n\"path\":\"%s\"\"}\n",
        "externalDocs": {
          "description": "HTTP API for WiiM PRODUCTS Version 1.2",
          "url": "https://www.wiimhome.com/pdf/HTTP%20API%20for%20WiiM%20Products.pdf"
        },
        "parameters": [
          {
            "name": "n",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "0",
                "1",
                "2"
              ],
              "default": ""
            },
            "description": "The alarm clock number"
          }
        ],
        "operationId": "getAlarmClock",
        "responses": {
          "200": {
            "description": "Default response",
            "content": {
              "text/html": {
                "schema": {}
              }
            }
          }
        },
        "tags": [
          "Alarm clock"
        ]
      }
    },
    "/alarmStop": {
      "get": {
        "summary": "Stop the current alarm",
        "description": "http://10.10.10.254/httpapi.asp?command=alarmStop",
        "externalDocs": {
          "description": "HTTP API for WiiM PRODUCTS Version 1.2",
          "url": "https://www.wiimhome.com/pdf/HTTP%20API%20for%20WiiM%20Products.pdf"
        },
        "parameters": [],
        "operationId": "stopAlarmClock",
        "responses": {
          "200": {
            "description": "Default response",
            "content": {
              "text/html": {
                "schema": {}
              }
            }
          }
        },
        "tags": [
          "Alarm clock"
        ]
      }
    },
    "/setPlayerCmd:switchmode:{mode}": {
      "get": {
        "summary": "Switch the source input",
        "description": "http://10.10.10.254/httpapi.asp?command=setPlayerCmd:switchmode:%s\n\nthe mode can be the text as below:\nline-in (it refers to aux-in too)\nbluetooth\noptical\nudisk\nwifi\n",
        "externalDocs": {
          "description": "HTTP API for WiiM PRODUCTS Version 1.2",
          "url": "https://www.wiimhome.com/pdf/HTTP%20API%20for%20WiiM%20Products.pdf"
        },
        "parameters": [
          {
            "name": "mode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "line-in",
                "bluetooth",
                "optical",
                "udisk",
                "wifi"
              ]
            }
          }
        ],
        "operationId": "setPlayerCmdSwitchMode",
        "responses": {
          "200": {
            "description": "Default response",
            "content": {
              "text/html": {
                "schema": {}
              }
            }
          }
        },
        "tags": [
          "Source Input Switch"
        ]
      }
    },
    "/MCUKeyShortClick:{n}": {
      "get": {
        "summary": "Play preset with preset number",
        "description": "http://10.10.10.254/httpapi.asp?command=MCUKeyShortClick:%d\n\n%d: Range is from 1 to 12\n",
        "externalDocs": {
          "description": "HTTP API for WiiM PRODUCTS Version 1.2",
          "url": "https://www.wiimhome.com/pdf/HTTP%20API%20for%20WiiM%20Products.pdf"
        },
        "parameters": [
          {
            "name": "n",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "1",
                "2",
                "3",
                "4",
                "5",
                "6",
                "7",
                "8",
                "9",
                "10",
                "11",
                "12"
              ]
            },
            "description": "Preset number"
          }
        ],
        "operationId": "getMCUKeyShortClick",
        "responses": {
          "default": {
            "description": "Default response"
          }
        },
        "tags": [
          "Presets"
        ]
      }
    },
    "/getPresetInfo": {
      "get": {
        "summary": "Get Preset List",
        "description": "http://10.10.10.254/httpapi.asp?command=getPresetInfo\n\nJSON Response\n{\n\"preset_num\": 3,\n\"preset_list\": [{\n\"number\": 1,\n\"name\": \"BBC Radio Norfolk\",\n\"url\": \"http:\\/\\/as-hls-wwlive.akamaized.net\\/pool_904\\/live\\/ww\\/bbc_radio_norfolk\\/bbc_radio_norfolk.isml\\/bbc_ra\ndio_norfolk-audio%3d96000.norewind.m3u8\",\n\"source\": \"Linkplay Radio\",\n\"picurl\": \"http:\\/\\/cdnprofiles.tunein.com\\/s6852\\/images\\/logoq.jpg?t=638353933090000000\"\n}, {\n\"number\": 6,\n\"name\": \"Radio Paradise\",\n\"url\": \"http:\\/\\/stream.radioparadise.com\\/flacm\",\n\"source\": \"RadioParadise\",\n\"picurl\": \"https:\\/\\/cdnprofiles.tunein.com\\/s13606\\/images\\/logod.png?t=637541039930000000\"\n}, {\n\"number\": 8,\n\"name\": \"1. Country Heat\",\n\"url\": \"unknow\",\n\"source\": \"Prime\",\n\"picurl\": \"https:\\/\\/m.media-amazon.com\\/images\\/I\\/51uR6AJUAQL.jpg\"\n}]\n}\n\nDescription\nField type Description\nname string Playlist name\nVersion 1.2\nField type Description\nnumber int Preset index (Start from 1)\npicurl string Cover picture url\npreset_list json array Preset list information\npreset_num int Total number of presets\nsource string Music source\nurl string Play url\n",
        "externalDocs": {
          "description": "HTTP API for WiiM PRODUCTS Version 1.2",
          "url": "https://www.wiimhome.com/pdf/HTTP%20API%20for%20WiiM%20Products.pdf"
        },
        "parameters": [],
        "operationId": "getPresetInfo",
        "responses": {
          "default": {
            "description": "Default response"
          }
        },
        "tags": [
          "Presets"
        ]
      }
    },
    "/startbtdiscovery:3": {
      "get": {
        "tags": [
          "Bluetooth"
        ],
        "summary": "Start Bluetooth device scan",
        "description": "Args: 3 (Not sure what this argument means, I've only seen the app use the value 3 for it. Works with other integers and successfully starts a BT scan. Maybe a max list size?)",
        "externalDocs": {
          "description": "WiiM Extended HTTP API by DanBrezeanu",
          "url": "https://github.com/DanBrezeanu/wiim-extended-http-api"
        },
        "operationId": "startBtDiscovery",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "text/html": {
                "schema": {
                  "type": "string",
                  "example": "OK"
                }
              }
            }
          }
        }
      }
    },
    "/getbtdiscoveryresult": {
      "get": {
        "tags": [
          "Bluetooth"
        ],
        "summary": "Get Bluetooth device scan result",
        "description": "First do a startbtdiscovery:3: to start the scan, then use this to get the result.\nOutput (JSON): num: Number of found devices scan_status: BT scan step  0: Not started\n  1: Initializing\n  2: ??? (never seen it)\n  3: Scanning\n  4: Finished scanning\nlist: List of found devices\nAlready paired devices may be listed as well.",
        "externalDocs": {
          "description": "WiiM Extended HTTP API by DanBrezeanu",
          "url": "https://github.com/DanBrezeanu/wiim-extended-http-api"
        },
        "operationId": "getBtDiscoveryResult",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/BluetoothDeviceList"
                }
              }
            }
          }
        }
      }
    },
    "/clearbtdiscoveryresult": {
      "get": {
        "tags": [
          "Bluetooth"
        ],
        "summary": "Clear Bluetooth device scan result",
        "description": "Clears the Bluetooth device scan results",
        "externalDocs": {
          "description": "WiiM Extended HTTP API by DanBrezeanu",
          "url": "https://github.com/DanBrezeanu/wiim-extended-http-api"
        },
        "operationId": "clearBtDiscoveryResult",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "text/html": {
                "schema": {
                  "type": "string",
                  "example": "OK"
                }
              }
            }
          }
        }
      }
    },
    "/getbthistory": {
      "get": {
        "tags": [
          "Bluetooth"
        ],
        "summary": "Get paired Bluetooth devices",
        "description": "Output (JSON):\nnum: Number of found devices scan_status: BT scan step 1: Initializing 2: ??? (never seen it) 3: Scanning 4: Finished scanning list: List of found devices",
        "externalDocs": {
          "description": "WiiM Extended HTTP API by DanBrezeanu",
          "url": "https://github.com/DanBrezeanu/wiim-extended-http-api"
        },
        "operationId": "getBtHistory",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/BluetoothDeviceList"
                }
              }
            }
          }
        }
      }
    },
    "/connectbta2dpsynk:{BT_MAC_ADDRESS}": {
      "get": {
        "tags": [
          "Bluetooth"
        ],
        "summary": "Connect to a Bluetooth device",
        "description": "Example: https://192.168.1.100/httpapi.asp?command=connectbta2dpsynk:9c:2a:be:2e:ce:f1\nOutput: Success: OK Error: Failed\nObservations: The device should be an Audio Sink (e.g. speaker, A/V reciever). The audio output will be changed to the device.",
        "externalDocs": {
          "description": "WiiM Extended HTTP API by DanBrezeanu",
          "url": "https://github.com/DanBrezeanu/wiim-extended-http-api"
        },
        "operationId": "connectBtA2dpsynk",
        "parameters": [
          {
            "$ref": "#/components/parameters/BT_MAC_ADDRESS"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "text/html": {
                "schema": {
                  "type": "string"
                },
                "examples": {
                  "OK": {
                    "summary": "Response OK",
                    "value": "OK"
                  },
                  "Failed": {
                    "summary": "Response Failed",
                    "value": "Failed"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/disconnectbta2dpsynk:{BT_MAC_ADDRESS}": {
      "get": {
        "tags": [
          "Bluetooth"
        ],
        "summary": "Disconnect from a Bluetooth device",
        "description": "Example: https://192.168.1.100/httpapi.asp?command=disconnectbta2dpsynk:9c:2a:be:2e:ce:f1",
        "externalDocs": {
          "description": "WiiM Extended HTTP API by DanBrezeanu",
          "url": "https://github.com/DanBrezeanu/wiim-extended-http-api"
        },
        "operationId": "disconnectBtA2dpsynk",
        "parameters": [
          {
            "$ref": "#/components/parameters/BT_MAC_ADDRESS"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "text/html": {
                "schema": {
                  "type": "string",
                  "example": "OK"
                }
              }
            }
          }
        }
      }
    },
    "/getbtpairstatus": {
      "get": {
        "tags": [
          "Bluetooth"
        ],
        "summary": "Get Bluetooth pairing status",
        "description": "Example: https://192.168.1.100/httpapi.asp?command=getbtpairstatus\nOutput (JSON): result: Pair status 0: Not paired 1: Disconnected 2: Connecting (assumption, never seen it) 3: Connected",
        "externalDocs": {
          "description": "WiiM Extended HTTP API by DanBrezeanu",
          "url": "https://github.com/DanBrezeanu/wiim-extended-http-api"
        },
        "operationId": "getBtPairStatus",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "text/html": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "integer",
                      "description": "Pair status 0: Not paired 1: Disconnected 2: Connecting 3: Connected",
                      "example": 1,
                      "enum": [
                        0,
                        1,
                        2,
                        3
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "externalDocs": {
    "url": "https://github.com/cvdlinden/wiim-httpapi"
  },
  "security": [],
  "components": {
    "links": {},
    "callbacks": {},
    "schemas": {
      "BluetoothDeviceList": {
        "type": "object",
        "properties": {
          "num": {
            "type": "integer",
            "description": "Number of devices found",
            "example": 1
          },
          "scan_status": {
            "type": "integer",
            "description": "BT scan step 0: Not started 1: Initializing 2: ??? (never seen it) 3: Scanning 4: Finished scanning",
            "example": 4
          },
          "list": {
            "type": "array",
            "description": "List of devices found",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Device name",
                  "example": "My Device"
                },
                "ad": {
                  "type": "string",
                  "description": "MAC address",
                  "example": "00:11:22:33:44:55"
                },
                "ct": {
                  "type": "integer",
                  "description": "Connection type",
                  "example": 0
                },
                "role": {
                  "type": "string",
                  "description": "Role",
                  "example": "Audio Source"
                }
              }
            }
          }
        }
      }
    },
    "parameters": {
      "BT_MAC_ADDRESS": {
        "name": "BT_MAC_ADDRESS",
        "description": "The Bluetooth MAC address of the device you want to connect to or disconnect from",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "example": "9c:2a:be:2e:ce:f1"
        }
      }
    },
    "responses": {}
  }
}
