{
    "openapi": "3.0.0",
    "info": {
        "title": "Linkplay/WiiM/Arylic HTTP API",
        "description": "HTTP API for Linkplay/WiiM devices.\n\nYou can send 'HTTPs Get' request to the device, most of the response is in the JSON format.\n\nRequest format is https://x.x.x.x/httpapi.asp?command=********\nx.x.x.x is the IP address of the device (Below, we assume the IP of the device is 10.10.10.254) ******* is the actual command.\n\nCommands can contain both integers and strings, denoted as '%d' for integers and '%s' for strings, respectively.\n\nThis Swagger doc uses a reverse proxy to access the device. See the description for the actual command.",
        "version": "1.2.0",
        "contact": {}
    },
    "servers": [
        {
            "url": "http://localhost:3000/proxy",
            "description": "Reverse proxy to access the device. See the README for more information."
        }
    ],
    "tags": [
        {
            "name": "Device information",
            "description": "Get the device information"
        },
        {
            "name": "Network",
            "description": "Get the network status"
        },
        {
            "name": "Playback control",
            "description": "Get and set playback controls"
        },
        {
            "name": "EQ",
            "description": "Get and set equalizer settings"
        },
        {
            "name": "Device control",
            "description": "Control the device"
        },
        {
            "name": "Alarm clock",
            "description": "Get and set alarm clock"
        },
        {
            "name": "Source Input Switch",
            "description": "Switch between inputs"
        },
        {
            "name": "Presets",
            "description": "Manage presets\n\nThe WiiM Home App allows users to configure 12 presets for quick access to preferred radio\nstations, playlists, mixes, albums, or artists. Each preset is accessible through its assigned\nnumber.\n"
        },
        {
            "name": "Track Metadata",
            "description": "Get Current Track Metadata"
        },
        {
            "name": "Audio Output Control",
            "description": "Get and set audio output mode"
        }
    ],
    "paths": {
        "/getStatusEx": {
            "get": {
                "tags": [
                    "Device information"
                ],
                "summary": "Get device information",
                "description": "Makes a call to https://10.10.10.254/httpapi.asp?command=getStatusEx",
                "externalDocs": {
                    "description": "HTTP API for WiiM PRODUCTS Version 1.2",
                    "url": "https://www.wiimhome.com/pdf/HTTP%20API%20for%20WiiM%20Products.pdf"
                },
                "operationId": "getStatusEx",
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "text/html": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "language": {
                                            "type": "string"
                                        },
                                        "ssid": {
                                            "type": "string",
                                            "description": "Name of the device"
                                        },
                                        "hideSSID": {
                                            "type": "string"
                                        },
                                        "firmware": {
                                            "type": "string",
                                            "description": "firmware version"
                                        },
                                        "build": {
                                            "type": "string"
                                        },
                                        "project": {
                                            "type": "string"
                                        },
                                        "priv_prj": {
                                            "type": "string"
                                        },
                                        "Release": {
                                            "type": "string",
                                            "description": "data the firmware is released"
                                        },
                                        "FW_Release_version": {
                                            "type": "string",
                                            "description": "Reserved"
                                        },
                                        "group": {
                                            "type": "string",
                                            "description": "0 means it's a master speaker, 1 means a slave speaker in a group"
                                        },
                                        "wmrm_version": {
                                            "type": "string",
                                            "description": "LinkPlay's MRM SDK version, version 4.2 or above won't work with any version below 4.2"
                                        },
                                        "expired": {
                                            "type": "string",
                                            "description": "Reserved"
                                        },
                                        "internet": {
                                            "type": "string",
                                            "description": "Is it connected to Internet"
                                        },
                                        "uuid": {
                                            "type": "string",
                                            "description": "The unique ID of the device"
                                        },
                                        "MAC": {
                                            "type": "string",
                                            "description": "The WiFi MAC address of the device"
                                        },
                                        "BT_MAC": {
                                            "type": "string",
                                            "description": "The BT MAC address of the device"
                                        },
                                        "AP_MAC": {
                                            "type": "string",
                                            "description": "The MAC address of the AP that the device is connected to"
                                        },
                                        "date": {
                                            "type": "string"
                                        },
                                        "time": {
                                            "type": "string"
                                        },
                                        "netstat": {
                                            "type": "string"
                                        },
                                        "essid": {
                                            "type": "string",
                                            "description": "The AP name in the HEX format"
                                        },
                                        "apcli0": {
                                            "type": "string",
                                            "description": "The IP v4 address of the device"
                                        },
                                        "eth0": {
                                            "type": "string"
                                        },
                                        "ETH_MAC": {
                                            "type": "string"
                                        },
                                        "hardware": {
                                            "type": "string"
                                        },
                                        "VersionUpdate": {
                                            "type": "string",
                                            "description": "0: No new version; 1: new version."
                                        },
                                        "NewVer": {
                                            "type": "string",
                                            "description": "If there's new version, the new firmware version number"
                                        },
                                        "mcu_ver": {
                                            "type": "string"
                                        },
                                        "mcu_ver_new": {
                                            "type": "string"
                                        },
                                        "update_check_count": {
                                            "type": "string"
                                        },
                                        "ra0": {
                                            "type": "string"
                                        },
                                        "temp_uuid": {
                                            "type": "string"
                                        },
                                        "cap1": {
                                            "type": "string",
                                            "description": "Reserved"
                                        },
                                        "capability": {
                                            "type": "string",
                                            "description": "Reserved"
                                        },
                                        "languages": {
                                            "type": "string"
                                        },
                                        "prompt_status": {
                                            "type": "string"
                                        },
                                        "alexa_ver": {
                                            "type": "string"
                                        },
                                        "alexa_beta_enable": {
                                            "type": "string"
                                        },
                                        "alexa_force_beta_cfg": {
                                            "type": "string"
                                        },
                                        "dsp_ver": {
                                            "type": "string"
                                        },
                                        "streams_all": {
                                            "type": "string",
                                            "description": "Reserved"
                                        },
                                        "streams": {
                                            "type": "string",
                                            "description": "Reserved"
                                        },
                                        "region": {
                                            "type": "string"
                                        },
                                        "volume_control": {
                                            "type": "string"
                                        },
                                        "external": {
                                            "type": "string"
                                        },
                                        "preset_key": {
                                            "type": "string",
                                            "description": "Number of preset keys"
                                        },
                                        "plm_support": {
                                            "type": "string",
                                            "description": "Reserved"
                                        },
                                        "lbc_support": {
                                            "type": "string",
                                            "description": "Reserved"
                                        },
                                        "WifiChannel": {
                                            "type": "string"
                                        },
                                        "RSSI": {
                                            "type": "string",
                                            "description": "WiFi signal strength"
                                        },
                                        "BSSID": {
                                            "type": "string",
                                            "description": "The MAC address of connected access point"
                                        },
                                        "wlanFreq": {
                                            "type": "string"
                                        },
                                        "wlanDataRate": {
                                            "type": "string"
                                        },
                                        "battery": {
                                            "type": "string"
                                        },
                                        "battery_percent": {
                                            "type": "string"
                                        },
                                        "securemode": {
                                            "type": "string"
                                        },
                                        "ota_interface_ver": {
                                            "type": "string"
                                        },
                                        "upnp_version": {
                                            "type": "string"
                                        },
                                        "upnp_uuid": {
                                            "type": "string"
                                        },
                                        "uart_pass_port": {
                                            "type": "string"
                                        },
                                        "communication_port": {
                                            "type": "string"
                                        },
                                        "web_firmware_update_hide": {
                                            "type": "string"
                                        },
                                        "tidal_version": {
                                            "type": "string"
                                        },
                                        "service_version": {
                                            "type": "string"
                                        },
                                        "EQ_support": {
                                            "type": "string"
                                        },
                                        "HiFiSRC_version": {
                                            "type": "string"
                                        },
                                        "power_mode": {
                                            "type": "string"
                                        },
                                        "security": {
                                            "type": "string"
                                        },
                                        "security_version": {
                                            "type": "string"
                                        },
                                        "security_capabilities": {
                                            "type": "string"
                                        },
                                        "public_https_version": {
                                            "type": "string"
                                        },
                                        "privacy_mode": {
                                            "type": "string"
                                        },
                                        "DeviceName": {
                                            "type": "string",
                                            "description": "The device name"
                                        },
                                        "GroupName": {
                                            "type": "string",
                                            "description": "The group name of the device is belonged to"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": []
            }
        },
        "/wlanGetConnectState": {
            "get": {
                "tags": [
                    "Network"
                ],
                "summary": "Get the connection status",
                "description": "Makes a call to https://10.10.10.254/httpapi.asp?command=wlanGetConnectState\n\nNote the return result is not in json.\n\nReturn string:\nReturn string Description\nPROCESS In progress\nPAIRFAIL Wrong password\nFAIL Connect fail\nOK connected\n\n",
                "externalDocs": {
                    "description": "HTTP API for WiiM PRODUCTS Version 1.2",
                    "url": "https://www.wiimhome.com/pdf/HTTP%20API%20for%20WiiM%20Products.pdf"
                },
                "operationId": "wlanGetConnectState",
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "text/html": {
                                "schema": {
                                    "type": "string"
                                },
                                "examples": {
                                    "PROCESS": {
                                        "summary": "In progress",
                                        "value": "PROCESS"
                                    },
                                    "PAIRFAIL": {
                                        "summary": "Wrong password",
                                        "value": "PAIRFAIL"
                                    },
                                    "FAIL": {
                                        "summary": "Connect fail",
                                        "value": "FAIL"
                                    },
                                    "OK": {
                                        "summary": "Connected",
                                        "value": "OK"
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": []
            }
        },
        "/getPlayerStatus": {
            "get": {
                "tags": [
                    "Playback control"
                ],
                "summary": "Get the playback status",
                "description": "Makes a call to https://10.10.10.254/httpapi.asp?command=getPlayerStatus",
                "externalDocs": {
                    "description": "HTTP API for WiiM PRODUCTS Version 1.2",
                    "url": "https://www.wiimhome.com/pdf/HTTP%20API%20for%20WiiM%20Products.pdf"
                },
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "text/html": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "Playback status",
                                            "enum": [
                                                "PLAYING",
                                                "PAUSE",
                                                "STOP",
                                                "BUFFERING"
                                            ]
                                        },
                                        "...": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [],
                "operationId": "getPlayerStatus"
            }
        },
        "/setPlayerCmd:hex_playlist:url:{index}": {
            "get": {
                "summary": "",
                "description": "http://10.10.10.254/httpapi.asp?command=setPlayerCmd:hex_playlist:url:<index>\nPlay the URl (URI is the m3u or ASX playlist link, index is the start index), here, url should be\nhexed (please refer to 1.3)\n",
                "externalDocs": {
                    "description": "HTTP API for WiiM PRODUCTS Version 1.2",
                    "url": "https://www.wiimhome.com/pdf/HTTP%20API%20for%20WiiM%20Products.pdf"
                },
                "parameters": [
                    {
                        "name": "index",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Default response"
                    }
                },
                "tags": [
                    "Playback control"
                ],
                "deprecated": true,
                "operationId": "setPlayerCmdHexPlaylistUrl"
            }
        },
        "/setPlayerCmd:pause": {
            "get": {
                "summary": "Pause",
                "description": "https://10.10.10.254/httpapi.asp?command=setPlayerCmd:pause",
                "externalDocs": {
                    "description": "HTTP API for WiiM PRODUCTS Version 1.2",
                    "url": "https://www.wiimhome.com/pdf/HTTP%20API%20for%20WiiM%20Products.pdf"
                },
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "Default response"
                    }
                },
                "tags": [
                    "Playback control"
                ],
                "operationId": "setPlayerCmdPause"
            }
        },
        "/setPlayerCmd:resume": {
            "get": {
                "summary": "Resume",
                "description": "https://10.10.10.254/httpapi.asp?command=setPlayerCmd:resume",
                "externalDocs": {
                    "description": "HTTP API for WiiM PRODUCTS Version 1.2",
                    "url": "https://www.wiimhome.com/pdf/HTTP%20API%20for%20WiiM%20Products.pdf"
                },
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "Default response"
                    }
                },
                "tags": [
                    "Playback control"
                ],
                "operationId": "setPlayerCmdResume"
            }
        },
        "/setPlayerCmd:onepause": {
            "get": {
                "summary": "Toggle pause/play",
                "description": "https://10.10.10.254/httpapi.asp?command=setPlayerCmd:onepause\nIf the state is paused, resume it; otherwise, pause it.",
                "externalDocs": {
                    "description": "HTTP API for WiiM PRODUCTS Version 1.2",
                    "url": "https://www.wiimhome.com/pdf/HTTP%20API%20for%20WiiM%20Products.pdf"
                },
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "Default response"
                    }
                },
                "tags": [
                    "Playback control"
                ],
                "operationId": "setPlayerCmdOnePause"
            }
        },
        "/setPlayerCmd:prev": {
            "get": {
                "summary": "Previous",
                "description": "https://10.10.10.254/httpapi.asp?command=setPlayerCmd:prev",
                "externalDocs": {
                    "description": "HTTP API for WiiM PRODUCTS Version 1.2",
                    "url": "https://www.wiimhome.com/pdf/HTTP%20API%20for%20WiiM%20Products.pdf"
                },
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "Default response"
                    }
                },
                "tags": [
                    "Playback control"
                ],
                "operationId": "setPlayerCmdPrev"
            }
        },
        "/setPlayerCmd:next": {
            "get": {
                "summary": "Next",
                "description": "https://10.10.10.254/httpapi.asp?command=setPlayerCmd:next",
                "externalDocs": {
                    "description": "HTTP API for WiiM PRODUCTS Version 1.2",
                    "url": "https://www.wiimhome.com/pdf/HTTP%20API%20for%20WiiM%20Products.pdf"
                },
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "Default response"
                    }
                },
                "tags": [
                    "Playback control"
                ],
                "operationId": "setPlayerCmdNext"
            }
        },
        "/setPlayerCmd:seek:position": {
            "get": {
                "summary": "Seek",
                "description": "https://10.10.10.254/httpapi.asp?command=setPlayerCmd:seek:position\nPosition is from 0 to duration in second.",
                "externalDocs": {
                    "description": "HTTP API for WiiM PRODUCTS Version 1.2",
                    "url": "https://www.wiimhome.com/pdf/HTTP%20API%20for%20WiiM%20Products.pdf"
                },
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "Default response"
                    }
                },
                "tags": [
                    "Playback control"
                ],
                "operationId": "setPlayerCmdSeekPosition"
            }
        },
        "/setPlayerCmd:stop": {
            "get": {
                "summary": "Stop",
                "description": "https://10.10.10.254/httpapi.asp?command=setPlayerCmd:stop",
                "externalDocs": {
                    "description": "HTTP API for WiiM PRODUCTS Version 1.2",
                    "url": "https://www.wiimhome.com/pdf/HTTP%20API%20for%20WiiM%20Products.pdf"
                },
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "Default response"
                    }
                },
                "tags": [
                    "Playback control"
                ],
                "operationId": "setPlayerCmdStop"
            }
        },
        "/setPlayerCmd:vol:{value}": {
            "get": {
                "summary": "Set volume",
                "description": "https://10.10.10.254/httpapi.asp?command=setPlayerCmd:vol:value\nValue can be 0 to 100.",
                "externalDocs": {
                    "description": "HTTP API for WiiM PRODUCTS Version 1.2",
                    "url": "https://www.wiimhome.com/pdf/HTTP%20API%20for%20WiiM%20Products.pdf"
                },
                "parameters": [
                    {
                        "name": "value",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Value can be 0 to 100."
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Default response"
                    }
                },
                "tags": [
                    "Playback control"
                ],
                "operationId": "setPlayerCmdVol"
            }
        },
        "/setPlayerCmd:mute:{n}": {
            "get": {
                "summary": "Mute",
                "description": "https://10.10.10.254/httpapi.asp?command=setPlayerCmd:mute:n\nMute: n=1\nUnmute: n=0\nThe slave mute state will be set at the same time when it's in group play.",
                "externalDocs": {
                    "description": "HTTP API for WiiM PRODUCTS Version 1.2",
                    "url": "https://www.wiimhome.com/pdf/HTTP%20API%20for%20WiiM%20Products.pdf"
                },
                "parameters": [
                    {
                        "name": "n",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "1",
                                "0"
                            ],
                            "default": "1"
                        },
                        "description": "Mute: n=1\nUnmute: n=0"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Default response"
                    }
                },
                "tags": [
                    "Playback control"
                ],
                "operationId": "setPlayerCmdMute"
            }
        },
        "/setPlayerCmd:loopmode:{n}": {
            "get": {
                "summary": "Loop mode set",
                "description": "https://10.10.10.254/httpapi.asp?command=setPlayerCmd:loopmode:n\n\nn = \n0 - Sequence, no loop\n1 - Single loop\n2 - Shuffle loop\n-1 - Sequence loop\n",
                "externalDocs": {
                    "description": "HTTP API for WiiM PRODUCTS Version 1.2",
                    "url": "https://www.wiimhome.com/pdf/HTTP%20API%20for%20WiiM%20Products.pdf"
                },
                "parameters": [
                    {
                        "name": "n",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "0",
                                "1",
                                "2",
                                "-1"
                            ]
                        },
                        "description": "0 Sequence, no loop\n1 Single loop\n2 Shuffle loop\n-1 Sequence loop"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Default response"
                    }
                },
                "tags": [
                    "Playback control"
                ],
                "operationId": "setPlayerCmdLoopmode"
            }
        },
        "/getNewAudioOutputHardwareMode": {
            "get": {
                "summary": "Get audio output mode",
                "description": "JSON Response:\n{\"hardware\":\"2\",\"source\":\"0\",\"audiocast\":\"0\"}\n\nDescription:\nField Description\nhardware Hardware Interface output mode:\n1: AUDIO_OUTPUT_SPDIF_MODE\n2: AUDIO_OUTPUT_AUX_MODE\n3: AUDIO_OUTPUT_COAX_MODE\nsource BT source output mode:\n0: disable\n1: active\naudiocast Audio cast output mode:\n0: disable\n1: active",
                "externalDocs": {
                    "description": "HTTP API for WiiM PRODUCTS Version 1.2",
                    "url": "https://www.wiimhome.com/pdf/HTTP%20API%20for%20WiiM%20Products.pdf"
                },
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "Default response"
                    }
                },
                "tags": [
                    "Audio Output Control"
                ],
                "operationId": "getNewAudioOutputHardwareMode"
            }
        },
        "/setAudioOutputHardwareMode:{n}": {
            "get": {
                "summary": "Set audio output mode",
                "description": "Field Description\nHardware Interface output mode:\n1: AUDIO_OUTPUT_SPDIF_MODE\n2: AUDIO_OUTPUT_AUX_MODE\n3: AUDIO_OUTPUT_COAX_MODE\nResponse is 'OK'",
                "externalDocs": {
                    "description": "HTTP API for WiiM PRODUCTS Version 1.2",
                    "url": "https://www.wiimhome.com/pdf/HTTP%20API%20for%20WiiM%20Products.pdf"
                },
                "parameters": [
                    {
                        "name": "n",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "1",
                                "2",
                                "3"
                            ]
                        },
                        "description": "Hardware Interface output mode:\n1: AUDIO_OUTPUT_SPDIF_MODE\n2: AUDIO_OUTPUT_AUX_MODE\n3: AUDIO_OUTPUT_COAX_MODE"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Default response"
                    }
                },
                "tags": [
                    "Audio Output Control"
                ],
                "operationId": "setAudioOutputHardwareMode"
            }
        },
        "/getMetaInfo": {
            "get": {
                "summary": "Get Current Track Metadata",
                "description": "JSON Response\n{\n \"metaData\": {\n \"album\": \"Country Heat\",\n \"title\": \"Old Dirt Roads\",\n \"artist\": \"Owen Riegling\",\n \"albumArtURI \": \"https://m.media-amazon.com/images/I/51iU0odzJwL.jpg\",\n \"sampleRate \": \"44100\",\n \"bitDepth\": \"16\"\n }\n}",
                "externalDocs": {
                    "description": "HTTP API for WiiM PRODUCTS Version 1.2",
                    "url": "https://www.wiimhome.com/pdf/HTTP%20API%20for%20WiiM%20Products.pdf"
                },
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "Default response"
                    }
                },
                "tags": [
                    "Track Metadata"
                ],
                "operationId": "getMetaInfo"
            }
        },
        "/setPlayerCmd:play:{url}": {
            "get": {
                "summary": "Play audio URL",
                "description": "https://10.10.10.254/httpapi.asp?command=setPlayerCmd:play:url\nPlay the URL. URL points to an audio stream address.\nResponse is always 'OK' now",
                "externalDocs": {
                    "description": "HTTP API for WiiM PRODUCTS Version 1.2",
                    "url": "https://www.wiimhome.com/pdf/HTTP%20API%20for%20WiiM%20Products.pdf"
                },
                "parameters": [
                    {
                        "name": "url",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "default": "http://as-hls-ww-live.akamaized.net/pool_01505109/live/ww/bbc_radio_one/bbc_radio_one.isml/bbc_radio_one-audio%3d96000.norewind.m3u8"
                        },
                        "description": "URL points to an audio stream address"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Default response"
                    }
                },
                "tags": [
                    "Playback control"
                ],
                "operationId": "setPlayerCmdPlayUrl"
            }
        },
        "/setPlayerCmd:playlist:{url}:{index}": {
            "get": {
                "summary": "Play audio playlist",
                "description": "https://10.10.10.254/httpapi.asp?command=setPlayerCmd:playlist:url:<index>\nPlay the playlist with the URL (URL points to the m3u or ASX playlist link, index is the start\nindex).\nResponse is always 'OK' now.",
                "externalDocs": {
                    "description": "HTTP API for WiiM PRODUCTS Version 1.2",
                    "url": "https://www.wiimhome.com/pdf/HTTP%20API%20for%20WiiM%20Products.pdf"
                },
                "parameters": [
                    {
                        "name": "index",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "url",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "default": "https://gist.githubusercontent.com/bpsib/67089b959e4fa898af69fea59ad74bc3/raw/685789e28187c0a15da978b51d436a140d5ea207/BBC-Radio-HLS.m3u"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Default response"
                    }
                },
                "tags": [
                    "Playback control"
                ],
                "operationId": "setPlayerCmdPlaylistUrl"
            }
        },
        "/EQOn": {
            "get": {
                "summary": "Turn on the EQ",
                "description": "https://10.10.10.254/httpapi.asp?command=EQOn\n\nJSON Response:\n{\"status\":\"OK\"} or {\"status\":\"Failed\"}",
                "externalDocs": {
                    "description": "HTTP API for WiiM PRODUCTS Version 1.2",
                    "url": "https://www.wiimhome.com/pdf/HTTP%20API%20for%20WiiM%20Products.pdf"
                },
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Default response",
                        "content": {
                            "text/html": {
                                "schema": {}
                            }
                        }
                    }
                },
                "tags": [
                    "EQ"
                ],
                "operationId": "setEQOn"
            }
        },
        "/EQOff": {
            "get": {
                "summary": "Turn off the EQ setting",
                "description": "https://10.10.10.254/httpapi.asp?command=EQOff\n\nJSON Response:\n{\"status\":\"OK\"} or {\"status\":\"Failed\"}\n",
                "externalDocs": {
                    "description": "HTTP API for WiiM PRODUCTS Version 1.2",
                    "url": "https://www.wiimhome.com/pdf/HTTP%20API%20for%20WiiM%20Products.pdf"
                },
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Default response",
                        "content": {
                            "text/html": {
                                "schema": {}
                            }
                        }
                    }
                },
                "tags": [
                    "EQ"
                ],
                "operationId": "setEQOff"
            }
        },
        "/EQGetStat": {
            "get": {
                "summary": "Check if the EQ is ON or OFF",
                "description": "http://10.10.10.254/httpapi.asp?command=EQGetStat\n\nJSON Response:\n{\"EQStat\":\"On\"} or {\"EQStat\":\"Off\"}",
                "externalDocs": {
                    "description": "HTTP API for WiiM PRODUCTS Version 1.2",
                    "url": "https://www.wiimhome.com/pdf/HTTP%20API%20for%20WiiM%20Products.pdf"
                },
                "parameters": [],
                "responses": {
                    "222": {
                        "description": "Default response",
                        "content": {
                            "text/html": {
                                "schema": {}
                            }
                        }
                    }
                },
                "tags": [
                    "EQ"
                ],
                "operationId": "getEQStat"
            }
        },
        "/EQGetList": {
            "get": {
                "summary": "Check all the possible EQ settings",
                "description": "http://10.10.10.254/httpapi.asp?command=EQGetList\n\nResponse:\n[\"Flat\", \"Acoustic\", \"Bass Booster\", \"Bass Reducer\", \"Classical\", \"Dance\", \"Deep\", \"Electronic\",\n\"Hip-Hop\", \"Jazz\", \"Latin\", \"Loudness\", \"Lounge\", \"Piano\", \"Pop\", \"R&B\", \"Rock\", \"Small\nSpeakers\", \"Spoken Word\", \"Treble Booster\", \"Treble Reducer\", \"Vocal Booster\"]\n",
                "externalDocs": {
                    "description": "HTTP API for WiiM PRODUCTS Version 1.2",
                    "url": "https://www.wiimhome.com/pdf/HTTP%20API%20for%20WiiM%20Products.pdf"
                },
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Default response",
                        "content": {
                            "text/html": {
                                "schema": {}
                            }
                        }
                    }
                },
                "tags": [
                    "EQ"
                ],
                "operationId": "getEQList"
            }
        },
        "/EQLoad:{name}": {
            "get": {
                "summary": "Set the specific EQ with name",
                "description": "http://10.10.10.254/httpapi.asp?command=EQLoad:xxx\n\nJSON Response:\n{\"status\":\"OK\"} or {\"status\":\"Failed\"}\n\nNote: xxx is the one of the name in the list returned by EQGetList, i.e., EQLoad:Flat",
                "externalDocs": {
                    "description": "HTTP API for WiiM PRODUCTS Version 1.2",
                    "url": "https://www.wiimhome.com/pdf/HTTP%20API%20for%20WiiM%20Products.pdf"
                },
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "Flat",
                                "Acoustic",
                                "Bass Booster",
                                "Bass Reducer",
                                "Classical",
                                "Dance",
                                "Deep",
                                "Electronic",
                                "Hip-Hop",
                                "Jazz",
                                "Latin",
                                "Loudness",
                                "Lounge",
                                "Piano",
                                "Pop",
                                "R&B",
                                "Rock",
                                "Small Speakers",
                                "Spoken Word",
                                "Treble Booster",
                                "Treble Reducer",
                                "Vocal Booster"
                            ]
                        },
                        "description": "The name in the list returned by EQGetList, i.e., EQLoad:Flat"
                    }
                ],
                "operationId": "loadEQByName",
                "responses": {
                    "200": {
                        "description": "Default response",
                        "content": {
                            "text/html": {
                                "schema": {}
                            }
                        }
                    }
                },
                "tags": [
                    "EQ"
                ]
            }
        },
        "/reboot": {
            "get": {
                "summary": "Reboot",
                "description": "http://10.10.10.254/httpapi.asp?command=reboot\n\nJSON Response:\n{\"status\":\"OK\"}",
                "externalDocs": {
                    "description": "HTTP API for WiiM PRODUCTS Version 1.2",
                    "url": "https://www.wiimhome.com/pdf/HTTP%20API%20for%20WiiM%20Products.pdf"
                },
                "parameters": [],
                "operationId": "rebootDevice",
                "responses": {
                    "200": {
                        "description": "Default response",
                        "content": {
                            "text/html": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "examples": {
                                    "OK": {
                                        "summary": "Response",
                                        "value": {
                                            "status": "OK"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Device control"
                ]
            }
        },
        "/setShutdown:{sec}": {
            "get": {
                "summary": "Shutdown",
                "description": "http://10.10.10.254/httpapi.asp?command=setShutdown:sec\n\nShutdown device in sec\n\nsec:\n0: shutdown immediately\n-1: cancel the previous shutdown timer\n\nJSON Response:\n{\"status\":\"OK\"} or {\"status\":\"Failed\"}\n",
                "externalDocs": {
                    "description": "HTTP API for WiiM PRODUCTS Version 1.2",
                    "url": "https://www.wiimhome.com/pdf/HTTP%20API%20for%20WiiM%20Products.pdf"
                },
                "parameters": [
                    {
                        "name": "sec",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "default": "0"
                        },
                        "description": "Shutdown device in sec\n\n0: shutdown immediately\n-1: cancel the previous shutdown timer"
                    }
                ],
                "operationId": "setShutdownTimer",
                "responses": {
                    "200": {
                        "description": "Default response",
                        "content": {
                            "text/html": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "examples": {
                                    "OK": {
                                        "summary": "OK",
                                        "value": {
                                            "status": "OK"
                                        }
                                    },
                                    "FAILED": {
                                        "summary": "Failed",
                                        "value": {
                                            "status": "Failed"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Device control"
                ]
            }
        },
        "/getShutdown": {
            "get": {
                "summary": "Get the shutdown timer",
                "description": "http://10.10.10.254/httpapi.asp?command=getShutdown\n\nReturn the seconds\n",
                "externalDocs": {
                    "description": "HTTP API for WiiM PRODUCTS Version 1.2",
                    "url": "https://www.wiimhome.com/pdf/HTTP%20API%20for%20WiiM%20Products.pdf"
                },
                "parameters": [],
                "operationId": "getShutdownTimer",
                "responses": {
                    "200": {
                        "description": "Default response",
                        "content": {
                            "text/html": {
                                "schema": {
                                    "type": "integer"
                                },
                                "examples": {
                                    "OK": {
                                        "summary": "Number of seconds",
                                        "value": 0
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Device control"
                ]
            }
        },
        "/timeSync:{YYYYMMDDHHMMSS}": {
            "get": {
                "summary": "Get network time",
                "description": "If the device has no internet access, you need to sync its time with:\n\nhttp://10.10.10.254/httpapi.asp?command=timeSync:YYYYMMDDHHMMSS\n\nYYYY is year (such as 2015), MM is month (01~12), DD is day (01~31), HH is hour (00~23),\nMM is minute (00~59), SS is second (00~59)\n\nIn UTC",
                "externalDocs": {
                    "description": "HTTP API for WiiM PRODUCTS Version 1.2",
                    "url": "https://www.wiimhome.com/pdf/HTTP%20API%20for%20WiiM%20Products.pdf"
                },
                "parameters": [
                    {
                        "name": "YYYYMMDDHHMMSS",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "operationId": "setTimeSync",
                "responses": {
                    "200": {
                        "description": "Default response",
                        "content": {
                            "text/html": {
                                "schema": {}
                            }
                        }
                    }
                },
                "tags": [
                    "Alarm clock"
                ]
            }
        },
        "/setAlarmClock:{n}:{trig}:{op}:{time}:{day}:{url}": {
            "get": {
                "summary": "Set Alarm",
                "description": "http://10.10.10.254/httpapi.asp?command=setAlarmClock:n:trig:op:time[:day][:url]\n\nn: 0~2, currently support max 3 alarm\n\ntrig: the alarm trigger:\n0 cancel the alarm, for example: setAlarmClock:n:0\n1 once, day should be YYYYMMDD\n2 every day\n3 every week, day should be 2 bytes (00”~“06”), means from Sunday to Saturday.\n4 every week, day should be 2 bytes, the bit 0 to bit 6 means the effect, for example,\n“7F” means every day in week, “01” means only Sunday\n5 every month, day should be 2 bytes (“01”~“31”)\n\nop: the action\n0 shell execute\n1 playback or ring\n2 stop playback\ntime: should be HHMMSS, in UTC\n\nday:\nif trigger is 0 or 2, no need to set.\nif trigger is 1, should be YYYYMMDD ( %04d%02d%02d)\nif trigger is 3, day should be 2 bytes (“00”~“06”), means from Sunday to Saturday.\nif trigger is 4, day should be 2 bytes, the bit 0 to bit 6 means the effect, for example,\n“7F” means every day in week, “01” means only Sunday\nif trigger is 5, day should be 2 bytes (“01”~“31”)\n\nurl: the shell path or playback url, should less than 256 bytes",
                "externalDocs": {
                    "description": "HTTP API for WiiM PRODUCTS Version 1.2",
                    "url": "https://www.wiimhome.com/pdf/HTTP%20API%20for%20WiiM%20Products.pdf"
                },
                "parameters": [
                    {
                        "name": "n",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "0",
                                "1",
                                "2"
                            ]
                        },
                        "description": "The alarm clock number\n\ncurrently support max 3 alarm\n"
                    },
                    {
                        "name": "trig",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "0",
                                "1",
                                "2",
                                "3",
                                "4",
                                "5"
                            ]
                        },
                        "description": "The alarm trigger\n\n0 cancel the alarm, for example: setAlarmClock:n:0\n1 once, day should be YYYYMMDD\n2 every day\n3 every week, day should be 2 bytes (00”~“06”), means from Sunday to Saturday.\n4 every week, day should be 2 bytes, the bit 0 to bit 6 means the effect, for example,\n“7F” means every day in week, “01” means only Sunday\n5 every month, day should be 2 bytes (“01”~“31”)\n"
                    },
                    {
                        "name": "op",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "0",
                                "1",
                                "2"
                            ]
                        },
                        "description": "The action\n\n0 shell execute\n1 playback or ring\n2 stop playback\n"
                    },
                    {
                        "name": "time",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "should be HHMMSS, in UTC"
                    },
                    {
                        "name": "day",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "if trigger is 0 or 2, no need to set.\n\nif trigger is 1, should be YYYYMMDD ( %04d%02d%02d)\n\nif trigger is 3, day should be 2 bytes (“00”~“06”), means from Sunday to Saturday.\n\nif trigger is 4, day should be 2 bytes, the bit 0 to bit 6 means the effect, for example,\n“7F” means every day in week, “01” means only Sunday\n\nif trigger is 5, day should be 2 bytes (“01”~“31”)"
                    },
                    {
                        "name": "url",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "The shell path or playback url, should less than 256 bytes"
                    }
                ],
                "operationId": "setAlarmClock",
                "responses": {
                    "200": {
                        "description": "Default response",
                        "content": {
                            "text/html": {
                                "schema": {}
                            }
                        }
                    }
                },
                "tags": [
                    "Alarm clock"
                ]
            }
        },
        "/getAlarmClock:{n}": {
            "get": {
                "summary": "",
                "description": "http://10.10.10.254/httpapi.asp?command=getAlarmClock:n\n\nn: 0~2, currently support max 3 alarm\n{\"enable\":\"1\",\n\"trigger\":\"%d\",\n\"operation\":\"%d\",\n\"date\"::\"%02d:%02d:%02d\", //if not a “every day” alarm, no this\n\"week_day\":\"%d\", //if not a “every week” alarm, no this\n\"day\":\"%02d\", //if not a “every month” alarm, no this\n\"time\":\"%02d:02d:%02d\",\n\"path\":\"%s\"\"}\n",
                "externalDocs": {
                    "description": "HTTP API for WiiM PRODUCTS Version 1.2",
                    "url": "https://www.wiimhome.com/pdf/HTTP%20API%20for%20WiiM%20Products.pdf"
                },
                "parameters": [
                    {
                        "name": "n",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "0",
                                "1",
                                "2"
                            ],
                            "default": ""
                        },
                        "description": "The alarm clock number"
                    }
                ],
                "operationId": "getAlarmClock",
                "responses": {
                    "200": {
                        "description": "Default response",
                        "content": {
                            "text/html": {
                                "schema": {}
                            }
                        }
                    }
                },
                "tags": [
                    "Alarm clock"
                ]
            }
        },
        "/alarmStop": {
            "get": {
                "summary": "Stop the current alarm",
                "description": "http://10.10.10.254/httpapi.asp?command=alarmStop",
                "externalDocs": {
                    "description": "HTTP API for WiiM PRODUCTS Version 1.2",
                    "url": "https://www.wiimhome.com/pdf/HTTP%20API%20for%20WiiM%20Products.pdf"
                },
                "parameters": [],
                "operationId": "stopAlarmClock",
                "responses": {
                    "200": {
                        "description": "Default response",
                        "content": {
                            "text/html": {
                                "schema": {}
                            }
                        }
                    }
                },
                "tags": [
                    "Alarm clock"
                ]
            }
        },
        "/setPlayerCmd:switchmode:{mode}": {
            "get": {
                "summary": "Switch the source input",
                "description": "http://10.10.10.254/httpapi.asp?command=setPlayerCmd:switchmode:%s\n\nthe mode can be the text as below:\nline-in (it refers to aux-in too)\nbluetooth\noptical\nudisk\nwifi\n",
                "externalDocs": {
                    "description": "HTTP API for WiiM PRODUCTS Version 1.2",
                    "url": "https://www.wiimhome.com/pdf/HTTP%20API%20for%20WiiM%20Products.pdf"
                },
                "parameters": [
                    {
                        "name": "mode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "line-in",
                                "bluetooth",
                                "optical",
                                "udisk",
                                "wifi"
                            ]
                        }
                    }
                ],
                "operationId": "setPlayerCmdSwitchMode",
                "responses": {
                    "200": {
                        "description": "Default response",
                        "content": {
                            "text/html": {
                                "schema": {}
                            }
                        }
                    }
                },
                "tags": [
                    "Source Input Switch"
                ]
            }
        },
        "/MCUKeyShortClick:{n}": {
            "get": {
                "summary": "Play preset with preset number",
                "description": "http://10.10.10.254/httpapi.asp?command=MCUKeyShortClick:%d\n\n%d: Range is from 1 to 12\n",
                "externalDocs": {
                    "description": "HTTP API for WiiM PRODUCTS Version 1.2",
                    "url": "https://www.wiimhome.com/pdf/HTTP%20API%20for%20WiiM%20Products.pdf"
                },
                "parameters": [
                    {
                        "name": "n",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "1",
                                "2",
                                "3",
                                "4",
                                "5",
                                "6",
                                "7",
                                "8",
                                "9",
                                "10",
                                "11",
                                "12"
                            ]
                        },
                        "description": "Preset number"
                    }
                ],
                "operationId": "getMCUKeyShortClick",
                "responses": {
                    "default": {
                        "description": "Default response"
                    }
                },
                "tags": [
                    "Presets"
                ]
            }
        },
        "/getPresetInfo": {
            "get": {
                "summary": "Get Preset List",
                "description": "http://10.10.10.254/httpapi.asp?command=getPresetInfo\n\nJSON Response\n{\n\"preset_num\": 3,\n\"preset_list\": [{\n\"number\": 1,\n\"name\": \"BBC Radio Norfolk\",\n\"url\": \"http:\\/\\/as-hls-wwlive.akamaized.net\\/pool_904\\/live\\/ww\\/bbc_radio_norfolk\\/bbc_radio_norfolk.isml\\/bbc_ra\ndio_norfolk-audio%3d96000.norewind.m3u8\",\n\"source\": \"Linkplay Radio\",\n\"picurl\": \"http:\\/\\/cdnprofiles.tunein.com\\/s6852\\/images\\/logoq.jpg?t=638353933090000000\"\n}, {\n\"number\": 6,\n\"name\": \"Radio Paradise\",\n\"url\": \"http:\\/\\/stream.radioparadise.com\\/flacm\",\n\"source\": \"RadioParadise\",\n\"picurl\": \"https:\\/\\/cdnprofiles.tunein.com\\/s13606\\/images\\/logod.png?t=637541039930000000\"\n}, {\n\"number\": 8,\n\"name\": \"1. Country Heat\",\n\"url\": \"unknow\",\n\"source\": \"Prime\",\n\"picurl\": \"https:\\/\\/m.media-amazon.com\\/images\\/I\\/51uR6AJUAQL.jpg\"\n}]\n}\n\nDescription\nField type Description\nname string Playlist name\nVersion 1.2\nField type Description\nnumber int Preset index (Start from 1)\npicurl string Cover picture url\npreset_list json array Preset list information\npreset_num int Total number of presets\nsource string Music source\nurl string Play url\n",
                "externalDocs": {
                    "description": "HTTP API for WiiM PRODUCTS Version 1.2",
                    "url": "https://www.wiimhome.com/pdf/HTTP%20API%20for%20WiiM%20Products.pdf"
                },
                "parameters": [],
                "operationId": "getPresetInfo",
                "responses": {
                    "default": {
                        "description": "Default response"
                    }
                },
                "tags": [
                    "Presets"
                ]
            }
        }
    },
    "externalDocs": {
        "url": "https://github.com/cvdlinden/wiim-httpapi"
    },
    "security": [],
    "components": {
        "links": {},
        "callbacks": {},
        "schemas": {}
    }
}